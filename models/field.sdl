DEFINITION	/* ALIAS SDL File Version 7.5.1 */
			/* Apparently from wire file '/usr/people/luis/user_data/demo/wire/STADIUM/field_sdl_noline'. */
	version = 7.51;

	xleft  = 0;
	xright = 639;
	ylow   = 0;
	yhigh  = 479;
	resolution = 640 480;
	aalevelmin   = 3;
	aalevelmax   = 12;
	aathreshold  = 0.6;
	post_filter   = OFF;
	post_center   = 8;    /* Values for a bartlet filter. */
	post_adjacent = 1;
	post_diagonal = 1;

	composite_rendering = OFF;
	invisible_objects_cast_shadows = OFF;
	image_format = TIFF;
	jitter       = ON;
	reduced_samples = OFF;
	textures_active    = ON;

	clamp_bumpsize = 0.0;

	up = yaxis;

	motion_blur_on = OFF;
	shutter_angle  = 144.0;
	animation  = OFF;
	startframe = 0.0;
	endframe = 0.0;
	fields          = FALSE;
	odd             = FALSE;
	even            = FALSE;
	odd_field_first = TRUE;

	triple Camera_view(0.0, 0.0, 0.0);
	triple Camera_up(0.0, 0.0, 0.0);

	subdivision_recursion_limit = 2;
	grid_cache = 4000;
	bbox_memory = FULL;
	rt_voxel_res_type = AUTOMATIC;

	max_reflections             = 10;
	max_refractions             = 10;
	max_shadow_level            = 10;
	preview_ray_trace           = OFF;

	scalar pixel_aspect ( 1.0 );
	hline_to_fill_color  = FALSE;
	hline_fill_color     = (255.0, 255.0, 255.0);
	hline_line_color     = (0.0, 255.0, 255.0);
	hline_isoparam_u     = 0;
	hline_isoparam_v     = 0;

	show_particles       = TRUE;
	simulation_substeps  = 1;
	simulation_frames_per_second = 30;

triple Lightview(0.0, 0.0, 0.0);
triple Lightup(0.0, 0.0, 0.0);

light Light ( model = ambient,
	active = ON,
	exclusive = FALSE,
	light_emission = ON,
	color = (255.0, 255.0, 255.0),
	shadow_color = (0.0, 0.0, 0.0),
	intensity = 1.0,
	force_type = OFF,
	force_intensity = 1.0,
	warp = OFF,
	glow_type = OFF,
	halo_type = OFF,
	fog_type = OFF,
	flare = OFF,
	psys_emission = OFF,
	shadow = FALSE,
	soft_shadows = FALSE,
	light_radius = 1.0,
	shadow_samples = 2.0,
	use_shadow_map = 0.0,
	ambient_shade = 0.0
);

texture EZBG (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/4jason/textures/field/endzone/beabg.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ezbg ( model = lambert,
        diffuse = 0.8,
        color = EZBG,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File#12 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/4jason/textures/field/endzone/beaez2.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ezlogo2 ( model = lambert,
        diffuse = 0.8,
        color = File#12,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File#13 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/4jason/textures/field/endzone/beaez3.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ezlogo3 ( model = lambert,
        diffuse = 0.8,
        color = File#13,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File#11 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/4jason/textures/field/endzone/beaez1.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ezlogo1 ( model = lambert,
        diffuse = 0.8,
        color = File#11,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NFL (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/4jason/textures/field/take2/nfl.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader nfl ( model = lambert,
        diffuse = 0.8,
        color = NFL,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture BLITZ (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/field/blitz.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

shader blitz ( model = lambert,
        diffuse = 0.8,
        color = BLITZ,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture EZSTRIPE (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/field/ezstripe.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader ezstripe ( model = lambert,
        diffuse = 0.8,
        color = EZSTRIPE,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GRASS3#2 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/field/Grass3.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader grass3 ( model = lambert,
        diffuse = 0.8,
        color = GRASS3#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture NUMBERS (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/field/numbers.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader numbers ( model = lambert,
        diffuse = 0.8,
        color = NUMBERS,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture POST (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/4jason/textures/field/take2/posthaf.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader post ( model = lambert,
        diffuse = 0.8,
        color = POST,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture File#22 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/stadium/Signs.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = OFF
);

texture File (
        procedure = file,
        rgbout = (0.0, 0.0, 0.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/signsalf.tif",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 1.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = OFF,
        vwrap = OFF,
        invert = ON
);

shader signs ( model = lambert,
        diffuse = 0.8,
        color = File#22,
        incandescence = (0.0, 0.0, 0.0),
        transparency = File,
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture SHADOW (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/stadium/shadow.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = ON,
        invert = OFF
);

shader shadows ( model = lambert,
        diffuse = 0.8,
        color = SHADOW,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GRASS1#2 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/field/Grass1.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = OFF,
        invert = OFF
);

shader grass1 ( model = lambert,
        diffuse = 0.8,
        color = GRASS1#2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

texture GRASS2 (
        procedure = file,
        rgbout = (0.0, 150.0, 255.0),
        active = ON,
        image = "/usr/people/luis/user_data/demo/pix/field/Grass2.TIF",
        use_extension = OFF,
        frame_extension = 1,
        filter =  BLEND_FILTER,
        cache = OFF,
        rgbmult = (1.0, 1.0, 1.0),
        rgboffset = (0.0, 0.0, 0.0),
        blurmult = 0.0,
        bluroffset = 0.0,
        rotate = 0.0,
        urepeat = 1.0,
        vrepeat = 1.0,
        uoffset = 0.0,
        voffset = 0.0,
        mirror = OFF,
        stagger = OFF,
        worldspace = OFF,
        chord_length = OFF,
        ucoverage = 1.0,
        vcoverage = 1.0,
        utranslate = 0.0,
        vtranslate = 0.0,
        uwrap = ON,
        vwrap = OFF,
        invert = OFF
);

shader grass2 ( model = lambert,
        diffuse = 0.8,
        color = GRASS2,
        incandescence = (0.0, 0.0, 0.0),
        transparency = (0.0, 0.0, 0.0),
        shading_map = (0.0, 0.0, 0.0),
        translucence = 0.0,
        translucence_depth = 0.5,
        opacity_depth = 0.0,
        use_background_color = OFF,
        matte_fraction = 0.0,
        psys_emission = OFF,
        glow_intensity = 0.0,
        hide_glow_source = OFF,
        refractive_index = 1.6,
        reflection_limit = 1,
        refraction_limit = 6,
        shadow_level_limit = 0,
        surface_width = 0.0,
        transparency_shade = 0.0,
        transparency_depth = 0.0,
        chromatic_abberation = 0.0,
        refraction_jitter = 0.0,
        refraction_samples = 0,
        respect_reflection_map = OFF,
        use_fill_color = ON,
        fill_color = (255.0, 255.0, 255.0),
        u_patch_lines = 0,
        v_patch_lines = 0,
        density = 1.0,
        elasticity = 0.707,
        friction = 0.0,
        drag_coeff = 0.5
);

polyset shadows_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (signs ),
	shader = (shadows ),
	casts_shadow = TRUE,
	vertices = ((cv((5.517429, 0.001389, -5.162317), 1)),
			(cv((5.052703, 0.001325, -5.165783), 1)),
			(cv((5.052019, 0.001318, -5.389953), 1)),
			(cv((-4.559608, 0.000005, -5.237477), 1)),
			(cv((-5.043717, 0.000005, -5.386313), 1)),
			(cv((5.044038, 0.001239, -7.475234), 1)),
			(cv((5.925858, 0.001389, -6.839863), 1)),
			(cv((5.010295, 0.000108, 4.94165), 1)),
			(cv((5.038644, 0.000116, 5.377248), 1)),
			(cv((-5.058126, 0.001389, 5.36627), 1)),
			(cv((5.78778, 0.000005, 4.941836), 1)),
			(cv((5.04948, 0.000165, 7.462416), 1)),
			(cv((-4.679433, 0.001389, 4.939332), 1)),
			(cv((6.048006, 0.000005, 6.733557), 1)),
			(cv((6.081966, 0.0, 3.092472), 1)),
			(cv((6.050573, 0.0, 3.23098), 1)),
			(cv((5.945456, 0.0, 3.118165), 1)),
			(cv((-5.92763, 0.0, -3.269635), 1)),
			(cv((-5.959023, 0.0, -3.131127), 1)),
			(cv((-6.06414, 0.0, -3.243942), 1)),
			(cv((-7.122827, 0.0, 3.092472), 1)),
			(cv((-7.15422, 0.0, 3.23098), 1)),
			(cv((-7.259336, 0.0, 3.118165), 1)),
			(cv((7.277162, 0.0, -3.269635), 1)),
			(cv((7.245769, 0.0, -3.131127), 1)),
			(cv((7.140653, 0.0, -3.243942), 1)),
			(cv((6.084702, 0.0, -3.268549), 1)),
			(cv((6.053309, 0.0, -3.130041), 1)),
			(cv((5.948192, 0.0, -3.242856), 1)),
			(cv((-5.928531, 0.0, 3.092472), 1)),
			(cv((-5.959924, 0.0, 3.23098), 1)),
			(cv((-6.065041, 0.0, 3.118165), 1)),
			(cv((-7.514822, 0.0, 0.219877), 1)),
			(cv((-6.66164, 0.0, -1.592012), 1)),
			(cv((-6.67433, 0.0, 0.225745), 1)),
			(cv((-7.120091, 0.0, -3.268549), 1)),
			(cv((-7.151484, 0.0, -3.130041), 1)),
			(cv((-7.2566, 0.0, -3.242856), 1)),
			(cv((-4.641426, 0.003719, -3.666971), 1)),
			(cv((-4.600317, 0.003719, -3.355741), 1)),
			(cv((-4.925071, 0.003719, -3.543105), 1)),
			(cv((-4.57428, 0.003719, 3.279045), 1)),
			(cv((-4.600317, 0.003719, 3.57109), 1)),
			(cv((-4.925071, 0.003719, 3.383727), 1)),
			(cv((-5.841865, 0.003719, -3.666971), 1)),
			(cv((-5.800756, 0.003719, -3.355741), 1)),
			(cv((-6.12551, 0.003719, -3.543105), 1)),
			(cv((-5.792905, 0.003719, 3.279045), 1)),
			(cv((-5.818943, 0.003719, 3.57109), 1)),
			(cv((-6.143696, 0.003719, 3.383727), 1)),
			(cv((7.276261, 0.0, 3.092472), 1)),
			(cv((7.244868, 0.0, 3.23098), 1)),
			(cv((7.139752, 0.0, 3.118165), 1)),
			(cv((7.140162, 0.0, 0.219877), 1)),
			(cv((7.993344, 0.0, -1.592012), 1)),
			(cv((7.980654, 0.0, 0.225745), 1)),
			(cv((6.156948, 0.003719, -3.666971), 1)),
			(cv((6.198056, 0.003719, -3.355741), 1)),
			(cv((5.873303, 0.003719, -3.543105), 1)),
			(cv((6.204215, 0.003719, 3.280145), 1)),
			(cv((6.178178, 0.003719, 3.572191), 1)),
			(cv((5.853424, 0.003719, 3.384828), 1)),
			(cv((4.936566, 0.003719, -3.666971), 1)),
			(cv((4.977674, 0.003719, -3.355741), 1)),
			(cv((4.652921, 0.003719, -3.543105), 1)),
			(cv((5.003712, 0.003719, 3.279045), 1)),
			(cv((4.977674, 0.003719, 3.57109), 1)),
			(cv((4.652921, 0.003719, 3.383727), 1)),
			(cv((3.724369, 0.003719, -3.666971), 1)),
			(cv((3.765477, 0.003719, -3.355741), 1)),
			(cv((3.440724, 0.003719, -3.543105), 1)),
			(cv((3.799309, 0.003719, 3.279045), 1)),
			(cv((3.773272, 0.003719, 3.57109), 1)),
			(cv((3.448518, 0.003719, 3.383727), 1)),
			(cv((2.536142, 0.003719, -3.666971), 1)),
			(cv((2.577251, 0.003719, -3.355741), 1)),
			(cv((2.252497, 0.003719, -3.543105), 1)),
			(cv((2.603288, 0.003719, 3.279045), 1)),
			(cv((2.577251, 0.003719, 3.57109), 1)),
			(cv((2.252497, 0.003719, 3.383727), 1)),
			(cv((1.341067, 0.003719, -3.666971), 1)),
			(cv((1.382176, 0.003719, -3.355741), 1)),
			(cv((1.057422, 0.003719, -3.543105), 1)),
			(cv((1.408213, 0.003719, 3.279045), 1)),
			(cv((1.382176, 0.003719, 3.57109), 1)),
			(cv((1.057422, 0.003719, 3.383727), 1)),
			(cv((0.148275, 0.003719, -3.666971), 1)),
			(cv((0.189383, 0.003719, -3.355741), 1)),
			(cv((-0.13537, 0.003719, -3.543105), 1)),
			(cv((0.207627, 0.003719, 3.279045), 1)),
			(cv((0.181589, 0.003719, 3.57109), 1)),
			(cv((-0.143165, 0.003719, 3.383727), 1)),
			(cv((-1.050778, 0.003719, -3.666971), 1)),
			(cv((-1.00967, 0.003719, -3.355741), 1)),
			(cv((-1.334423, 0.003719, -3.543105), 1)),
			(cv((-0.983632, 0.003719, 3.279045), 1)),
			(cv((-1.00967, 0.003719, 3.57109), 1)),
			(cv((-1.334423, 0.003719, 3.383727), 1)),
			(cv((-2.24918, 0.003719, -3.666971), 1)),
			(cv((-2.208071, 0.003719, -3.355741), 1)),
			(cv((-2.532825, 0.003719, -3.543105), 1)),
			(cv((-2.182034, 0.003719, 3.279045), 1)),
			(cv((-2.208071, 0.003719, 3.57109), 1)),
			(cv((-2.532825, 0.003719, 3.383727), 1)),
			(cv((-3.442238, 0.003719, -3.666971), 1)),
			(cv((-3.40113, 0.003719, -3.355741), 1)),
			(cv((-3.725883, 0.003719, -3.543105), 1)),
			(cv((-3.3647, 0.003719, 3.279045), 1)),
			(cv((-3.390738, 0.003719, 3.57109), 1)),
			(cv((-3.715491, 0.003719, 3.383727), 1))	),
	texture_vertices = (
			st( 0.992974, 0.737502 ),
			st( 0.982909, 0.737502 ),
			st( 0.981844, 0.758057 ),
			st( 0.774735, 0.737502 ),
			st( 0.774735, 0.997767 ),
			st( 0.969422, 0.997767 ),
			st( 0.992974, 0.997767 ),
			st( 0.788145, 0.734426 ),
			st( 0.789455, 0.772875 ),
			st( 0.991001, 0.998279 ),
			st( 0.771868, 0.734426 ),
			st( 0.797133, 0.998279 ),
			st( 0.991001, 0.734426 ),
			st( 0.771868, 0.998279 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.989930, 0.037915 ),
			st( 0.017958, 0.487334 ),
			st( 0.989930, 0.487334 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.353185, 0.487126 ),
			st( 0.455449, 0.466002 ),
			st( 0.373999, 0.387136 ),
			st( 0.989930, 0.037915 ),
			st( 0.017958, 0.487334 ),
			st( 0.989930, 0.487334 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ),
			st( 0.333398, 0.490051 ),
			st( 0.423486, 0.490299 ),
			st( 0.363344, 0.426967 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 4, 2),(3, 4, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((5, 6, 0),(5, 6, 0), 0 ),
		polygon ((2, 5, 0),(2, 5, 0), 0 ),
		polygon ((7, 8, 9),(7, 8, 9), 0 ),
		polygon ((8, 7, 10),(8, 7, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((9, 12, 7),(9, 12, 7), 0 ),
		polygon ((10, 13, 11),(10, 13, 11), 0 ),
		polygon ((14, 15, 16),(14, 15, 16), 1 ),
		polygon ((17, 18, 19),(17, 18, 19), 1 ),
		polygon ((20, 21, 22),(20, 21, 22), 1 ),
		polygon ((23, 24, 25),(23, 24, 25), 1 ),
		polygon ((26, 27, 28),(26, 27, 28), 1 ),
		polygon ((29, 30, 31),(29, 30, 31), 1 ),
		polygon ((32, 33, 34),(32, 33, 34), 1 ),
		polygon ((35, 36, 37),(35, 36, 37), 1 ),
		polygon ((38, 39, 40),(38, 39, 40), 1 ),
		polygon ((41, 42, 43),(41, 42, 43), 1 ),
		polygon ((44, 45, 46),(44, 45, 46), 1 ),
		polygon ((47, 48, 49),(47, 48, 49), 1 ),
		polygon ((50, 51, 52),(50, 51, 52), 1 ),
		polygon ((53, 54, 55),(53, 54, 55), 1 ),
		polygon ((56, 57, 58),(56, 57, 58), 1 ),
		polygon ((59, 60, 61),(59, 60, 61), 1 ),
		polygon ((62, 63, 64),(62, 63, 64), 1 ),
		polygon ((65, 66, 67),(65, 66, 67), 1 ),
		polygon ((68, 69, 70),(68, 69, 70), 1 ),
		polygon ((71, 72, 73),(71, 72, 73), 1 ),
		polygon ((74, 75, 76),(74, 75, 76), 1 ),
		polygon ((77, 78, 79),(77, 78, 79), 1 ),
		polygon ((80, 81, 82),(80, 81, 82), 1 ),
		polygon ((83, 84, 85),(83, 84, 85), 1 ),
		polygon ((86, 87, 88),(86, 87, 88), 1 ),
		polygon ((89, 90, 91),(89, 90, 91), 1 ),
		polygon ((92, 93, 94),(92, 93, 94), 1 ),
		polygon ((95, 96, 97),(95, 96, 97), 1 ),
		polygon ((98, 99, 100),(98, 99, 100), 1 ),
		polygon ((101, 102, 103),(101, 102, 103), 1 ),
		polygon ((104, 105, 106),(104, 105, 106), 1 ),
		polygon ((107, 108, 109),(107, 108, 109), 1 )
	)
); /* end of polyset 'shadows_obj' */

polyset outerfield_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (grass3 ),
	casts_shadow = TRUE,
	vertices = ((cv((7.304658, 0.0, 5.380515), 1)),
			(cv((7.304658, 0.0, 6.440042), 1)),
			(cv((5.042221, 0.0, 5.380515), 1)),
			(cv((5.042221, 0.0, 6.440042), 1)),
			(cv((5.042221, 0.0, 7.476596), 1)),
			(cv((-7.304658, 0.0, -5.380515), 1)),
			(cv((-7.304658, 0.0, -6.440042), 1)),
			(cv((-5.042221, 0.0, -5.380515), 1)),
			(cv((-5.042221, 0.0, -6.440042), 1)),
			(cv((-5.042221, 0.0, -7.476596), 1)),
			(cv((-8.333209, 0.0, 3.399993), 1)),
			(cv((-9.205804, 0.0, 3.399353), 1)),
			(cv((-8.333209, 0.0, -3.40178), 1)),
			(cv((-9.205804, 0.0, -3.402982), 1)),
			(cv((-7.430119, 0.0, -3.399697), 1)),
			(cv((-7.430119, 0.0, 3.402076), 1)),
			(cv((8.3315, 0.0, 3.399993), 1)),
			(cv((7.428348, 0.0, 3.399353), 1)),
			(cv((8.3315, 0.0, -3.40178), 1)),
			(cv((7.428348, 0.0, -3.402982), 1)),
			(cv((9.204026, 0.0, -3.399697), 1)),
			(cv((9.204026, 0.0, 3.402076), 1)),
			(cv((9.160199, 0.0, 3.398986), 1)),
			(cv((9.158987, 0.0, 4.390082), 1)),
			(cv((-9.204775, 0.0, 3.398986), 1)),
			(cv((-9.205987, 0.0, 4.390082), 1)),
			(cv((-9.205987, 0.0, -3.398861), 1)),
			(cv((-9.205987, 0.0, -4.391269), 1)),
			(cv((9.158987, 0.0, -3.398861), 1)),
			(cv((9.158987, 0.0, -5.383628), 1)),
			(cv((9.158987, 0.0, -4.391269), 1)),
			(cv((-9.205987, 0.0, -5.383628), 1)),
			(cv((-9.205987, 0.0, 5.381718), 1)),
			(cv((9.158987, 0.0, 5.381718), 1)),
			(cv((-7.304658, 0.0, 5.380515), 1)),
			(cv((-7.304658, 0.0, 6.440042), 1)),
			(cv((-5.042221, 0.0, 5.380515), 1)),
			(cv((-5.042221, 0.0, 6.440042), 1)),
			(cv((-5.042221, 0.0, 7.476596), 1)),
			(cv((7.304658, 0.0, -5.380515), 1)),
			(cv((7.304658, 0.0, -6.440042), 1)),
			(cv((5.042221, 0.0, -5.380515), 1)),
			(cv((5.042221, 0.0, -6.440042), 1)),
			(cv((5.042221, 0.0, -7.476596), 1))	),
	texture_vertices = (
			st( 0.104000, 0.893600 ),
			st( 0.902000, 0.894000 ),
			st( 0.902000, 0.016296 ),
			st( 0.104000, 0.016296 ),
			st( 0.902000, 0.016296 ),
			st( 0.902000, 0.894000 ),
			st( 0.104000, 0.893600 ),
			st( 0.104000, 0.893600 ),
			st( 0.902000, 0.894000 ),
			st( 0.902000, 0.016296 ),
			st( 0.104000, 0.016296 ),
			st( 0.902000, 0.016296 ),
			st( 0.902000, 0.894000 ),
			st( 0.104000, 0.893600 ),
			st( 0.104319, 2.743728 ),
			st( 0.104319, 0.038561 ),
			st( 0.104319, 0.038561 ),
			st( 0.901910, 2.743250 ),
			st( 0.104319, 0.038561 ),
			st( 0.104319, 2.743728 ),
			st( 0.901910, 0.038083 ),
			st( 0.901910, 2.743250 ),
			st( 0.901910, 0.038083 ),
			st( 0.104319, 2.743728 ),
			st( 0.104319, 0.038561 ),
			st( 0.104319, 0.038561 ),
			st( 0.901910, 2.743250 ),
			st( 0.104319, 0.038561 ),
			st( 0.104319, 2.743728 ),
			st( 0.901910, 0.038083 ),
			st( 0.901910, 2.743250 ),
			st( 0.901910, 0.038083 ),
			st( 0.104000, 7.254111 ),
			st( 0.902000, 7.254111 ),
			st( 0.902000, 0.016296 ),
			st( 0.104000, 0.016296 ),
			st( 0.902000, 0.016296 ),
			st( 0.902000, 7.254111 ),
			st( 0.902000, 7.254111 ),
			st( 0.104000, 7.254111 ),
			st( 0.902000, 7.254111 ),
			st( 0.902000, 0.016296 ),
			st( 0.104000, 0.016296 ),
			st( 0.104000, 7.254111 ),
			st( 0.902000, 7.254111 ),
			st( 0.902000, 0.016296 ),
			st( 0.902000, 7.254111 ),
			st( 0.104000, 0.016296 ),
			st( 0.104000, 7.254111 ),
			st( 0.104000, 0.016296 ),
			st( 0.104000, 0.893600 ),
			st( 0.902000, 0.894000 ),
			st( 0.902000, 0.016296 ),
			st( 0.104000, 0.016296 ),
			st( 0.902000, 0.016296 ),
			st( 0.902000, 0.894000 ),
			st( 0.104000, 0.893600 ),
			st( 0.104000, 0.893600 ),
			st( 0.902000, 0.894000 ),
			st( 0.902000, 0.016296 ),
			st( 0.104000, 0.016296 ),
			st( 0.902000, 0.016296 ),
			st( 0.902000, 0.894000 ),
			st( 0.104000, 0.893600 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 3), 0 ),
		polygon ((2, 1, 3),(3, 1, 4), 0 ),
		polygon ((3, 1, 4),(5, 2, 6), 0 ),
		polygon ((5, 6, 7),(7, 8, 10), 0 ),
		polygon ((7, 6, 8),(10, 8, 11), 0 ),
		polygon ((8, 6, 9),(12, 9, 13), 0 ),
		polygon ((10, 11, 12),(14, 17, 18), 0 ),
		polygon ((12, 11, 13),(18, 17, 20), 0 ),
		polygon ((12, 14, 10),(19, 21, 15), 0 ),
		polygon ((10, 14, 15),(16, 21, 22), 0 ),
		polygon ((16, 17, 18),(23, 26, 27), 0 ),
		polygon ((18, 17, 19),(27, 26, 29), 0 ),
		polygon ((18, 20, 16),(28, 30, 24), 0 ),
		polygon ((16, 20, 21),(25, 30, 31), 0 ),
		polygon ((22, 23, 24),(32, 33, 35), 0 ),
		polygon ((24, 23, 25),(35, 33, 36), 0 ),
		polygon ((26, 27, 28),(39, 40, 42), 0 ),
		polygon ((29, 30, 31),(43, 44, 47), 0 ),
		polygon ((32, 25, 33),(48, 37, 49), 0 ),
		polygon ((33, 25, 23),(49, 38, 34), 0 ),
		polygon ((28, 27, 30),(42, 40, 45), 0 ),
		polygon ((31, 30, 27),(47, 46, 41), 0 ),
		polygon ((36, 35, 34),(53, 51, 50), 0 ),
		polygon ((37, 35, 36),(54, 51, 53), 0 ),
		polygon ((38, 35, 37),(56, 52, 55), 0 ),
		polygon ((41, 40, 39),(60, 58, 57), 0 ),
		polygon ((42, 40, 41),(61, 58, 60), 0 ),
		polygon ((43, 40, 42),(63, 59, 62), 0 )
	)
); /* end of polyset 'outerfield_obj' */

polyset mainfield_obj (
	active = ON,
	motion_blur = ON,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (grass3 ),
	shader = (grass1 ),
	shader = (grass2 ),
	casts_shadow = TRUE,
	vertices = ((cv((5.989645, 0.0, -2.043458), 1)),
			(cv((5.99169, 0.0, -0.678319), 1)),
			(cv((-5.997009, 0.0, -0.678319), 1)),
			(cv((-5.994964, 0.0, -2.043458), 1)),
			(cv((-5.997009, 0.0, 0.678319), 1)),
			(cv((-5.994978, 0.0, -3.404709), 1)),
			(cv((5.989659, 0.0, -3.404709), 1)),
			(cv((5.99169, 0.0, 0.678319), 1)),
			(cv((-5.994964, 0.0, 2.043458), 1)),
			(cv((-5.994978, 0.0, 3.404709), 1)),
			(cv((5.989659, 0.0, 3.404709), 1)),
			(cv((5.989645, 0.0, 2.043458), 1))	),
	texture_vertices = (
			st( 1.010083, 0.951402 ),
			st( 1.010083, 0.036327 ),
			st( 1.013500, 0.044893 ),
			st( 1.013500, 0.959489 ),
			st( 1.013500, 0.959489 ),
			st( -19.021294, 0.044893 ),
			st( -19.021292, 0.959489 ),
			st( -19.017876, 0.951402 ),
			st( -19.017876, 0.036327 ),
			st( -19.017876, 0.036327 ),
			st( -19.021294, 0.044893 ),
			st( -19.021292, 0.042550 ),
			st( -19.021292, 0.042550 ),
			st( -19.017899, 0.968226 ),
			st( 1.010106, 0.968226 ),
			st( 1.013500, 0.044893 ),
			st( 1.013500, 0.042550 ),
			st( -19.017876, 0.036327 ),
			st( -19.017876, 0.951402 ),
			st( -19.017899, 0.968226 ),
			st( 1.010106, 0.968226 ),
			st( 1.010083, 0.036327 ),
			st( 1.010083, 0.951402 ),
			st( 1.010083, 0.951402 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 2, 5), 0 ),
		polygon ((2, 3, 0),(5, 7, 0), 0 ),
		polygon ((3, 5, 6),(8, 13, 14), 1 ),
		polygon ((0, 3, 6),(1, 9, 14), 1 ),
		polygon ((10, 9, 8),(20, 19, 17), 1 ),
		polygon ((10, 8, 11),(20, 17, 21), 1 ),
		polygon ((4, 7, 11),(10, 15, 22), 0 ),
		polygon ((11, 8, 4),(23, 18, 10), 0 ),
		polygon ((4, 2, 1),(11, 6, 3), 2 ),
		polygon ((1, 7, 4),(4, 16, 12), 2 )
	)
); /* end of polyset 'mainfield_obj' */

polyset nfllogo_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (nfl ),
	shader = (blitz ),
	casts_shadow = TRUE,
	vertices = ((cv((-0.287908, 0.0, 0.37247), 1)),
			(cv((-0.287908, 0.0, -0.331739), 1)),
			(cv((0.274315, 0.0, 0.37247), 1)),
			(cv((0.274315, 0.0, -0.331739), 1)),
			(cv((-4.765851, 0.0, 2.412514), 1)),
			(cv((-4.765851, 0.0, 2.140884), 1)),
			(cv((-3.032565, 0.0, 2.412514), 1)),
			(cv((-3.032565, 0.0, 2.140884), 1)),
			(cv((4.757951, 0.0, -2.412514), 1)),
			(cv((4.757951, 0.0, -2.140884), 1)),
			(cv((3.024665, 0.0, -2.412514), 1)),
			(cv((3.024665, 0.0, -2.140884), 1)),
			(cv((-3.018633, 0.0, -2.392723), 1)),
			(cv((-3.018633, 0.0, -2.121093), 1)),
			(cv((-4.751918, 0.0, -2.392723), 1)),
			(cv((-4.751918, 0.0, -2.121093), 1)),
			(cv((3.018633, 0.0, 2.392723), 1)),
			(cv((3.018633, 0.0, 2.121093), 1)),
			(cv((4.751918, 0.0, 2.392723), 1)),
			(cv((4.751918, 0.0, 2.121093), 1)),
			(cv((-4.512182, 0.0, 2.161633), 1)),
			(cv((-4.512182, 0.0, 1.998863), 1)),
			(cv((-3.923249, 0.0, 2.161633), 1)),
			(cv((-3.923249, 0.0, 1.998863), 1)),
			(cv((4.504282, 0.0, -2.161633), 1)),
			(cv((4.504282, 0.0, -1.998863), 1)),
			(cv((3.915349, 0.0, -2.161633), 1)),
			(cv((3.915349, 0.0, -1.998863), 1)),
			(cv((3.281103, 0.0, 2.141842), 1)),
			(cv((3.281103, 0.0, 1.979071), 1)),
			(cv((3.870036, 0.0, 2.141842), 1)),
			(cv((3.870036, 0.0, 1.979071), 1)),
			(cv((-3.272302, 0.0, -2.141842), 1)),
			(cv((-3.272302, 0.0, -1.979071), 1)),
			(cv((-3.861235, 0.0, -2.141842), 1)),
			(cv((-3.861235, 0.0, -1.979071), 1))	),
	texture_vertices = (
			st( 0.009701, 0.006185 ),
			st( 0.009701, 0.993198 ),
			st( 0.994708, 0.006185 ),
			st( 0.994708, 0.993198 ),
			st( 0.003087, 0.017323 ),
			st( 0.003087, 0.635885 ),
			st( 0.993370, 0.017324 ),
			st( 0.993370, 0.635885 ),
			st( 0.003087, 0.017323 ),
			st( 0.003087, 0.635885 ),
			st( 0.993370, 0.017324 ),
			st( 0.993370, 0.635885 ),
			st( 0.003087, 0.017323 ),
			st( 0.003087, 0.635885 ),
			st( 0.993370, 0.017324 ),
			st( 0.993370, 0.635885 ),
			st( 0.003087, 0.017323 ),
			st( 0.003087, 0.635885 ),
			st( 0.993370, 0.017324 ),
			st( 0.993370, 0.635885 ),
			st( 0.663059, 0.624246 ),
			st( 0.663059, 0.994912 ),
			st( 0.999536, 0.624246 ),
			st( 0.999536, 0.994912 ),
			st( 0.663059, 0.624246 ),
			st( 0.663059, 0.994912 ),
			st( 0.999536, 0.624246 ),
			st( 0.999536, 0.994912 ),
			st( 0.663059, 0.624246 ),
			st( 0.663059, 0.994912 ),
			st( 0.999536, 0.624246 ),
			st( 0.999536, 0.994912 ),
			st( 0.663059, 0.624246 ),
			st( 0.663059, 0.994912 ),
			st( 0.999536, 0.624246 ),
			st( 0.999536, 0.994912 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 1 ),
		polygon ((6, 5, 7),(6, 5, 7), 1 ),
		polygon ((8, 9, 10),(8, 9, 10), 1 ),
		polygon ((10, 9, 11),(10, 9, 11), 1 ),
		polygon ((12, 13, 14),(12, 13, 14), 1 ),
		polygon ((14, 13, 15),(14, 13, 15), 1 ),
		polygon ((16, 17, 18),(16, 17, 18), 1 ),
		polygon ((18, 17, 19),(18, 17, 19), 1 ),
		polygon ((20, 21, 22),(20, 21, 22), 1 ),
		polygon ((22, 21, 23),(22, 21, 23), 1 ),
		polygon ((24, 25, 26),(24, 25, 26), 1 ),
		polygon ((26, 25, 27),(26, 25, 27), 1 ),
		polygon ((28, 29, 30),(28, 29, 30), 1 ),
		polygon ((30, 29, 31),(30, 29, 31), 1 ),
		polygon ((32, 33, 34),(32, 33, 34), 1 ),
		polygon ((34, 33, 35),(34, 33, 35), 1 )
	)
); /* end of polyset 'nfllogo_obj' */

polyset ezstripe_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ezstripe ),
	casts_shadow = TRUE,
	vertices = ((cv((5.981553, 0.0, -3.154904), 1)),
			(cv((6.059632, 0.0, -3.155127), 1)),
			(cv((6.059754, 0.0, 3.15575), 1)),
			(cv((5.981431, 0.0, 3.155619), 1)),
			(cv((7.133676, 0.0, 3.077154), 1)),
			(cv((7.133797, 0.0, -3.076546), 1)),
			(cv((7.431172, 0.0, -3.401934), 1)),
			(cv((7.431293, 0.0, 3.402705), 1)),
			(cv((5.989708, 0.0, 3.077043), 1)),
			(cv((5.989708, 0.0, 3.402561), 1)),
			(cv((5.989708, 0.0, -3.077043), 1)),
			(cv((5.989708, 0.0, -3.402561), 1)),
			(cv((-5.981553, 0.0, 3.154904), 1)),
			(cv((-6.059632, 0.0, 3.155127), 1)),
			(cv((-6.059754, 0.0, -3.15575), 1)),
			(cv((-5.981431, 0.0, -3.155619), 1)),
			(cv((-7.133676, 0.0, -3.077154), 1)),
			(cv((-7.133797, 0.0, 3.076546), 1)),
			(cv((-7.431172, 0.0, 3.401934), 1)),
			(cv((-7.431293, 0.0, -3.402705), 1)),
			(cv((-5.989708, 0.0, -3.077043), 1)),
			(cv((-5.989708, 0.0, -3.402561), 1)),
			(cv((-5.989708, 0.0, 3.077043), 1)),
			(cv((-5.989708, 0.0, 3.402561), 1))	),
	texture_vertices = (
			st( 17.753099, 0.326468 ),
			st( 17.753704, 0.115589 ),
			st( 0.569614, 0.115261 ),
			st( 0.569971, 0.326796 ),
			st( 0.094403, 0.096798 ),
			st( -2.080687, 0.100990 ),
			st( -16.661705, 0.097126 ),
			st( -2.080687, 0.100990 ),
			st( -17.547714, 0.982834 ),
			st( -2.965328, 0.986699 ),
			st( -2.965328, 0.986699 ),
			st( 0.980857, 0.983162 ),
			st( -2.965328, 0.986699 ),
			st( -2.965328, 0.986699 ),
			st( 1.008957, 0.100662 ),
			st( 1.008957, 0.987026 ),
			st( 1.008957, 0.100662 ),
			st( 1.008957, 0.987026 ),
			st( 17.753099, 0.326468 ),
			st( 17.753704, 0.115589 ),
			st( 0.569614, 0.115261 ),
			st( 0.569971, 0.326796 ),
			st( 0.094403, 0.096798 ),
			st( -2.080687, 0.100990 ),
			st( -16.661705, 0.097126 ),
			st( -2.080687, 0.100990 ),
			st( -17.547714, 0.982834 ),
			st( -2.965328, 0.986699 ),
			st( -2.965328, 0.986699 ),
			st( 0.980857, 0.983162 ),
			st( -2.965328, 0.986699 ),
			st( -2.965328, 0.986699 ),
			st( 1.008957, 0.100662 ),
			st( 1.008957, 0.987026 ),
			st( 1.008957, 0.100662 ),
			st( 1.008957, 0.987026 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((3, 0, 2),(3, 0, 2), 0 ),
		polygon ((4, 5, 6),(4, 6, 8), 0 ),
		polygon ((4, 6, 7),(4, 8, 11), 0 ),
		polygon ((8, 4, 7),(14, 5, 12), 0 ),
		polygon ((8, 7, 9),(14, 13, 15), 0 ),
		polygon ((6, 5, 10),(9, 7, 16), 0 ),
		polygon ((11, 6, 10),(17, 10, 16), 0 ),
		polygon ((12, 13, 14),(18, 19, 20), 0 ),
		polygon ((15, 12, 14),(21, 18, 20), 0 ),
		polygon ((16, 17, 18),(22, 24, 26), 0 ),
		polygon ((16, 18, 19),(22, 26, 29), 0 ),
		polygon ((20, 16, 19),(32, 23, 30), 0 ),
		polygon ((20, 19, 21),(32, 31, 33), 0 ),
		polygon ((18, 17, 22),(27, 25, 34), 0 ),
		polygon ((23, 18, 22),(35, 28, 34), 0 )
	)
); /* end of polyset 'ezstripe_obj' */

polyset ezlogo_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (ezbg ),
	shader = (ezlogo2 ),
	shader = (ezlogo3 ),
	shader = (ezlogo1 ),
	casts_shadow = TRUE,
	vertices = ((cv((6.017028, 0.0, -3.173026), 1)),
			(cv((6.198247, 0.0, -2.373451), 1)),
			(cv((6.19811, 0.0, 2.38172), 1)),
			(cv((6.017028, 0.0, 3.169146), 1)),
			(cv((6.989857, 0.0, 2.38172), 1)),
			(cv((6.989468, 0.0, -2.373451), 1)),
			(cv((7.190342, 0.0, -3.173026), 1)),
			(cv((7.189355, 0.0, 3.169638), 1)),
			(cv((6.99005, 0.0, 0.798794), 1)),
			(cv((6.198024, 0.0, 0.797852), 1)),
			(cv((6.198024, 0.0, -0.788441), 1)),
			(cv((6.99005, 0.0, -0.788441), 1)),
			(cv((-6.017028, 0.0, 3.173026), 1)),
			(cv((-6.198247, 0.0, 2.373451), 1)),
			(cv((-6.19811, 0.0, -2.38172), 1)),
			(cv((-6.017028, 0.0, -3.169146), 1)),
			(cv((-6.989857, 0.0, -2.38172), 1)),
			(cv((-6.989468, 0.0, 2.373451), 1)),
			(cv((-7.190342, 0.0, 3.173026), 1)),
			(cv((-7.189355, 0.0, -3.169638), 1)),
			(cv((-6.99005, 0.0, -0.798794), 1)),
			(cv((-6.198024, 0.0, -0.797852), 1)),
			(cv((-6.198024, 0.0, 0.788441), 1)),
			(cv((-6.99005, 0.0, 0.788441), 1))	),
	texture_vertices = (
			st( 25.318974, 11.700385 ),
			st( 22.667362, 9.919441 ),
			st( 0.004989, 0.012837 ),
			st( 0.004989, 0.012837 ),
			st( 3.109084, 1.538191 ),
			st( 0.990862, 0.012837 ),
			st( -0.766082, 0.521584 ),
			st( 5.892144, -0.085335 ),
			st( 0.990862, 0.987066 ),
			st( 0.990862, 0.987066 ),
			st( 25.448574, 8.296995 ),
			st( 0.004989, 0.987066 ),
			st( 29.443279, 9.294431 ),
			st( 3.352729, -1.883213 ),
			st( 0.994553, 0.987066 ),
			st( 0.002368, 0.987066 ),
			st( 0.993966, 0.012837 ),
			st( 0.001779, 0.012837 ),
			st( 0.001779, 0.012837 ),
			st( 0.005875, 0.012837 ),
			st( 0.994876, 0.012837 ),
			st( 0.005875, 0.987066 ),
			st( 0.994876, 0.987066 ),
			st( 0.994876, 0.987066 ),
			st( 25.318974, 11.700385 ),
			st( 22.667362, 9.919441 ),
			st( 0.004989, 0.012837 ),
			st( 0.004989, 0.012837 ),
			st( 3.109084, 1.538191 ),
			st( 0.990862, 0.012837 ),
			st( -0.766082, 0.521584 ),
			st( 5.892144, -0.085335 ),
			st( 0.990862, 0.987066 ),
			st( 0.990862, 0.987066 ),
			st( 25.448574, 8.296995 ),
			st( 0.004989, 0.987066 ),
			st( 29.443279, 9.294431 ),
			st( 3.352729, -1.883213 ),
			st( 0.994553, 0.987066 ),
			st( 0.002368, 0.987066 ),
			st( 0.993966, 0.012837 ),
			st( 0.001779, 0.012837 ),
			st( 0.001779, 0.012837 ),
			st( 0.005875, 0.012837 ),
			st( 0.994876, 0.012837 ),
			st( 0.005875, 0.987066 ),
			st( 0.994876, 0.987066 ),
			st( 0.994876, 0.987066 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 4), 0 ),
		polygon ((2, 3, 0),(4, 6, 0), 0 ),
		polygon ((4, 5, 6),(7, 10, 12), 0 ),
		polygon ((6, 7, 4),(12, 13, 7), 0 ),
		polygon ((2, 4, 7),(4, 7, 13), 0 ),
		polygon ((7, 3, 2),(13, 6, 4), 0 ),
		polygon ((0, 6, 5),(0, 12, 10), 0 ),
		polygon ((5, 1, 0),(10, 1, 0), 0 ),
		polygon ((8, 9, 10),(14, 16, 19), 1 ),
		polygon ((10, 11, 8),(19, 21, 14), 1 ),
		polygon ((4, 2, 9),(8, 5, 17), 2 ),
		polygon ((9, 8, 4),(18, 15, 9), 2 ),
		polygon ((11, 10, 1),(22, 20, 2), 3 ),
		polygon ((1, 5, 11),(3, 11, 23), 3 ),
		polygon ((12, 13, 14),(24, 25, 28), 0 ),
		polygon ((14, 15, 12),(28, 30, 24), 0 ),
		polygon ((16, 17, 18),(31, 34, 36), 0 ),
		polygon ((18, 19, 16),(36, 37, 31), 0 ),
		polygon ((14, 16, 19),(28, 31, 37), 0 ),
		polygon ((19, 15, 14),(37, 30, 28), 0 ),
		polygon ((12, 18, 17),(24, 36, 34), 0 ),
		polygon ((17, 13, 12),(34, 25, 24), 0 ),
		polygon ((20, 21, 22),(38, 40, 43), 1 ),
		polygon ((22, 23, 20),(43, 45, 38), 1 ),
		polygon ((16, 14, 21),(32, 29, 41), 2 ),
		polygon ((21, 20, 16),(42, 39, 33), 2 ),
		polygon ((23, 22, 13),(46, 44, 26), 3 ),
		polygon ((13, 17, 23),(27, 35, 47), 3 )
	)
); /* end of polyset 'ezlogo_obj' */

polyset yardmarkers_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (blitz ),
	casts_shadow = TRUE,
	vertices = ((cv((5.93758, 0.091738, 3.464324), 1)),
			(cv((6.043779, 0.091176, 3.464101), 1)),
			(cv((5.937667, -0.001772, 3.495977), 1)),
			(cv((5.937582, -0.002019, 3.435295), 1)),
			(cv((6.043781, -0.001786, 3.435072), 1)),
			(cv((6.043866, -0.001539, 3.495754), 1)),
			(cv((-5.93758, 0.091738, -3.465023), 1)),
			(cv((-6.043779, 0.091176, -3.464799), 1)),
			(cv((-5.937667, -0.001772, -3.496675), 1)),
			(cv((-5.937582, -0.002019, -3.435993), 1)),
			(cv((-6.043781, -0.001786, -3.43577), 1)),
			(cv((-6.043866, -0.001539, -3.496452), 1)),
			(cv((-6.058468, 0.091738, 3.463224), 1)),
			(cv((-5.952268, 0.091176, 3.463), 1)),
			(cv((-6.05838, -0.001772, 3.494876), 1)),
			(cv((-6.058465, -0.002019, 3.434194), 1)),
			(cv((-5.952266, -0.001786, 3.433971), 1)),
			(cv((-5.952181, -0.001539, 3.494653), 1)),
			(cv((6.058468, 0.091738, -3.465023), 1)),
			(cv((5.952268, 0.091176, -3.464799), 1)),
			(cv((6.05838, -0.001772, -3.496675), 1)),
			(cv((6.058465, -0.002019, -3.435993), 1)),
			(cv((5.952266, -0.001786, -3.43577), 1)),
			(cv((5.952181, -0.001539, -3.496452), 1)),
			(cv((4.740078, 0.091738, 3.463224), 1)),
			(cv((4.846277, 0.091176, 3.463), 1)),
			(cv((4.740165, -0.001772, 3.494876), 1)),
			(cv((4.74008, -0.002019, 3.434194), 1)),
			(cv((4.846279, -0.001786, 3.433971), 1)),
			(cv((4.846364, -0.001539, 3.494653), 1)),
			(cv((-4.740078, 0.091738, -3.465023), 1)),
			(cv((-4.846277, 0.091176, -3.464799), 1)),
			(cv((-4.740165, -0.001772, -3.496675), 1)),
			(cv((-4.74008, -0.002019, -3.435993), 1)),
			(cv((-4.846279, -0.001786, -3.43577), 1)),
			(cv((-4.846364, -0.001539, -3.496452), 1)),
			(cv((-4.83919, 0.091738, 3.463224), 1)),
			(cv((-4.732991, 0.091176, 3.463), 1)),
			(cv((-4.839102, -0.001772, 3.494876), 1)),
			(cv((-4.839188, -0.002019, 3.434194), 1)),
			(cv((-4.732988, -0.001786, 3.433971), 1)),
			(cv((-4.732903, -0.001539, 3.494653), 1)),
			(cv((4.83919, 0.091738, -3.465023), 1)),
			(cv((4.732991, 0.091176, -3.464799), 1)),
			(cv((4.839102, -0.001772, -3.496675), 1)),
			(cv((4.839188, -0.002019, -3.435993), 1)),
			(cv((4.732988, -0.001786, -3.43577), 1)),
			(cv((4.732903, -0.001539, -3.496452), 1)),
			(cv((3.536633, 0.091738, 3.463224), 1)),
			(cv((3.642833, 0.091176, 3.463), 1)),
			(cv((3.536721, -0.001772, 3.494876), 1)),
			(cv((3.536636, -0.002019, 3.434194), 1)),
			(cv((3.642835, -0.001786, 3.433971), 1)),
			(cv((3.64292, -0.001539, 3.494653), 1)),
			(cv((-3.536633, 0.091738, -3.465023), 1)),
			(cv((-3.642833, 0.091176, -3.464799), 1)),
			(cv((-3.536721, -0.001772, -3.496675), 1)),
			(cv((-3.536636, -0.002019, -3.435993), 1)),
			(cv((-3.642835, -0.001786, -3.43577), 1)),
			(cv((-3.64292, -0.001539, -3.496452), 1)),
			(cv((-3.626617, 0.091738, 3.463224), 1)),
			(cv((-3.520418, 0.091176, 3.463), 1)),
			(cv((-3.62653, -0.001772, 3.494876), 1)),
			(cv((-3.626615, -0.002019, 3.434194), 1)),
			(cv((-3.520416, -0.001786, 3.433971), 1)),
			(cv((-3.520331, -0.001539, 3.494653), 1)),
			(cv((3.626617, 0.091738, -3.465023), 1)),
			(cv((3.520418, 0.091176, -3.464799), 1)),
			(cv((3.62653, -0.001772, -3.496675), 1)),
			(cv((3.626615, -0.002019, -3.435993), 1)),
			(cv((3.520416, -0.001786, -3.43577), 1)),
			(cv((3.520331, -0.001539, -3.496452), 1)),
			(cv((-0.055625, 0.091738, 3.463224), 1)),
			(cv((0.050574, 0.091176, 3.463), 1)),
			(cv((-0.055537, -0.001772, 3.494876), 1)),
			(cv((-0.055623, -0.002019, 3.434194), 1)),
			(cv((0.050577, -0.001786, 3.433971), 1)),
			(cv((0.050662, -0.001539, 3.494653), 1)),
			(cv((0.055625, 0.091738, -3.465023), 1)),
			(cv((-0.050574, 0.091176, -3.464799), 1)),
			(cv((0.055537, -0.001772, -3.496675), 1)),
			(cv((0.055623, -0.002019, -3.435993), 1)),
			(cv((-0.050577, -0.001786, -3.43577), 1)),
			(cv((-0.050662, -0.001539, -3.496452), 1)),
			(cv((1.144608, 0.091738, 3.463224), 1)),
			(cv((1.250807, 0.091176, 3.463), 1)),
			(cv((1.144696, -0.001772, 3.494876), 1)),
			(cv((1.14461, -0.002019, 3.434194), 1)),
			(cv((1.25081, -0.001786, 3.433971), 1)),
			(cv((1.250895, -0.001539, 3.494653), 1)),
			(cv((-1.144608, 0.091738, -3.465023), 1)),
			(cv((-1.250807, 0.091176, -3.464799), 1)),
			(cv((-1.144696, -0.001772, -3.496675), 1)),
			(cv((-1.14461, -0.002019, -3.435993), 1)),
			(cv((-1.25081, -0.001786, -3.43577), 1)),
			(cv((-1.250895, -0.001539, -3.496452), 1)),
			(cv((-1.246726, 0.091738, 3.463224), 1)),
			(cv((-1.140527, 0.091176, 3.463), 1)),
			(cv((-1.246639, -0.001772, 3.494876), 1)),
			(cv((-1.246724, -0.002019, 3.434194), 1)),
			(cv((-1.140525, -0.001786, 3.433971), 1)),
			(cv((-1.14044, -0.001539, 3.494653), 1)),
			(cv((1.246726, 0.091738, -3.465023), 1)),
			(cv((1.140527, 0.091176, -3.464799), 1)),
			(cv((1.246639, -0.001772, -3.496675), 1)),
			(cv((1.246724, -0.002019, -3.435993), 1)),
			(cv((1.140525, -0.001786, -3.43577), 1)),
			(cv((1.14044, -0.001539, -3.496452), 1)),
			(cv((2.342299, 0.091738, 3.463224), 1)),
			(cv((2.448498, 0.091176, 3.463), 1)),
			(cv((2.342386, -0.001772, 3.494876), 1)),
			(cv((2.342301, -0.002019, 3.434194), 1)),
			(cv((2.4485, -0.001786, 3.433971), 1)),
			(cv((2.448585, -0.001539, 3.494653), 1)),
			(cv((-2.342299, 0.091738, -3.465023), 1)),
			(cv((-2.448498, 0.091176, -3.464799), 1)),
			(cv((-2.342386, -0.001772, -3.496675), 1)),
			(cv((-2.342301, -0.002019, -3.435993), 1)),
			(cv((-2.4485, -0.001786, -3.43577), 1)),
			(cv((-2.448585, -0.001539, -3.496452), 1)),
			(cv((-2.442825, 0.091738, 3.463224), 1)),
			(cv((-2.336625, 0.091176, 3.463), 1)),
			(cv((-2.442737, -0.001772, 3.494876), 1)),
			(cv((-2.442822, -0.002019, 3.434194), 1)),
			(cv((-2.336623, -0.001786, 3.433971), 1)),
			(cv((-2.336538, -0.001539, 3.494653), 1)),
			(cv((2.442825, 0.091738, -3.465023), 1)),
			(cv((2.336625, 0.091176, -3.464799), 1)),
			(cv((2.442737, -0.001772, -3.496675), 1)),
			(cv((2.442822, -0.002019, -3.435993), 1)),
			(cv((2.336623, -0.001786, -3.43577), 1)),
			(cv((2.336538, -0.001539, -3.496452), 1))	),
	texture_vertices = (
			st( 0.002236, 0.996332 ),
			st( 0.002276, 0.994392 ),
			st( 0.101648, 0.997266 ),
			st( 0.101648, 0.997583 ),
			st( 0.001525, 0.994965 ),
			st( 0.001525, 0.996698 ),
			st( 0.101648, 0.997583 ),
			st( 0.106545, 0.967071 ),
			st( 0.001796, 0.637778 ),
			st( 0.002843, 0.638004 ),
			st( 0.001796, 0.637778 ),
			st( 0.002163, 0.638004 ),
			st( 0.102089, 0.637729 ),
			st( 0.102089, 0.637729 ),
			st( 0.000809, 0.638144 ),
			st( 0.105326, 0.637682 ),
			st( 0.101554, 0.638144 ),
			st( 0.105091, 0.637682 ),
			st( 0.002236, 0.996332 ),
			st( 0.106278, 0.966522 ),
			st( 0.101460, 0.995957 ),
			st( 0.101366, 0.996648 ),
			st( 0.001525, 0.994965 ),
			st( 0.001525, 0.996698 ),
			st( 0.101366, 0.996649 ),
			st( 0.003701, 0.991015 ),
			st( 0.001796, 0.637778 ),
			st( 0.105498, 0.637630 ),
			st( 0.001796, 0.637778 ),
			st( 0.104818, 0.637629 ),
			st( 0.102089, 0.637729 ),
			st( 0.102089, 0.637729 ),
			st( 0.000809, 0.638144 ),
			st( 0.004985, 0.638057 ),
			st( 0.102617, 0.638144 ),
			st( 0.003499, 0.638057 ),
			st( 0.002236, 0.996332 ),
			st( 0.003433, 0.990466 ),
			st( 0.101271, 0.997266 ),
			st( 0.101460, 0.996274 ),
			st( 0.001525, 0.994965 ),
			st( 0.001525, 0.996698 ),
			st( 0.101460, 0.996274 ),
			st( 0.106545, 0.967071 ),
			st( 0.001796, 0.637778 ),
			st( 0.005157, 0.638004 ),
			st( 0.001796, 0.637778 ),
			st( 0.004477, 0.638004 ),
			st( 0.101901, 0.637729 ),
			st( 0.101901, 0.637729 ),
			st( 0.000809, 0.638144 ),
			st( 0.105326, 0.637682 ),
			st( 0.101554, 0.638144 ),
			st( 0.105091, 0.637682 ),
			st( 0.002236, 0.996332 ),
			st( 0.106278, 0.966522 ),
			st( 0.099333, 0.997266 ),
			st( 0.099333, 0.997583 ),
			st( 0.001525, 0.994965 ),
			st( 0.001525, 0.996698 ),
			st( 0.099333, 0.997583 ),
			st( 0.003701, 0.991015 ),
			st( 0.001796, 0.637778 ),
			st( 0.105498, 0.637630 ),
			st( 0.001796, 0.637778 ),
			st( 0.104818, 0.637629 ),
			st( 0.099774, 0.637729 ),
			st( 0.099774, 0.637729 ),
			st( 0.000809, 0.638144 ),
			st( 0.004985, 0.638057 ),
			st( 0.099239, 0.638144 ),
			st( 0.003499, 0.638057 ),
			st( 0.106548, 0.994648 ),
			st( 0.003433, 0.990466 ),
			st( 0.218393, 0.998065 ),
			st( 0.218393, 0.996698 ),
			st( 0.105567, 0.995015 ),
			st( 0.105567, 0.995064 ),
			st( 0.218393, 0.996698 ),
			st( 0.106545, 0.967071 ),
			st( 0.105026, 0.639313 ),
			st( 0.005157, 0.638004 ),
			st( 0.105026, 0.639313 ),
			st( 0.004477, 0.638004 ),
			st( 0.217135, 0.639313 ),
			st( 0.217135, 0.639313 ),
			st( 0.105561, 0.637996 ),
			st( 0.105326, 0.637682 ),
			st( 0.216871, 0.639679 ),
			st( 0.105091, 0.637682 ),
			st( 0.106548, 0.994648 ),
			st( 0.106278, 0.966522 ),
			st( 0.218393, 0.998065 ),
			st( 0.218393, 0.996698 ),
			st( 0.105567, 0.995015 ),
			st( 0.105567, 0.995064 ),
			st( 0.218393, 0.996698 ),
			st( 0.003701, 0.991015 ),
			st( 0.105026, 0.639313 ),
			st( 0.105498, 0.637630 ),
			st( 0.105026, 0.639313 ),
			st( 0.104818, 0.637629 ),
			st( 0.217135, 0.639313 ),
			st( 0.217135, 0.639313 ),
			st( 0.105561, 0.637996 ),
			st( 0.004985, 0.638057 ),
			st( 0.216871, 0.639679 ),
			st( 0.003499, 0.638057 ),
			st( 0.106548, 0.994648 ),
			st( 0.003433, 0.990466 ),
			st( 0.218393, 0.998065 ),
			st( 0.218393, 0.996698 ),
			st( 0.105567, 0.995015 ),
			st( 0.105567, 0.995064 ),
			st( 0.218393, 0.996698 ),
			st( 0.106545, 0.967071 ),
			st( 0.105026, 0.639313 ),
			st( 0.005157, 0.638004 ),
			st( 0.105026, 0.639313 ),
			st( 0.004477, 0.638004 ),
			st( 0.217135, 0.639313 ),
			st( 0.217135, 0.639313 ),
			st( 0.105561, 0.637996 ),
			st( 0.105326, 0.637682 ),
			st( 0.216871, 0.639679 ),
			st( 0.105091, 0.637682 ),
			st( 0.106548, 0.994648 ),
			st( 0.106278, 0.966522 ),
			st( 0.218393, 0.998065 ),
			st( 0.218393, 0.996698 ),
			st( 0.105567, 0.995015 ),
			st( 0.105567, 0.995064 ),
			st( 0.218393, 0.996698 ),
			st( 0.003701, 0.991015 ),
			st( 0.105026, 0.639313 ),
			st( 0.105498, 0.637630 ),
			st( 0.105026, 0.639313 ),
			st( 0.104818, 0.637629 ),
			st( 0.217135, 0.639313 ),
			st( 0.217135, 0.639313 ),
			st( 0.105561, 0.637996 ),
			st( 0.004985, 0.638057 ),
			st( 0.216871, 0.639679 ),
			st( 0.003499, 0.638057 ),
			st( 0.218393, 0.998065 ),
			st( 0.003433, 0.990466 ),
			st( 0.326189, 0.998065 ),
			st( 0.326189, 0.996698 ),
			st( 0.218122, 0.998481 ),
			st( 0.218122, 0.998481 ),
			st( 0.326189, 0.996698 ),
			st( 0.106545, 0.967071 ),
			st( 0.216871, 0.639362 ),
			st( 0.005157, 0.638004 ),
			st( 0.216871, 0.639363 ),
			st( 0.004477, 0.638004 ),
			st( 0.326454, 0.639412 ),
			st( 0.326454, 0.639412 ),
			st( 0.217406, 0.639729 ),
			st( 0.105326, 0.637682 ),
			st( 0.325919, 0.639729 ),
			st( 0.105091, 0.637682 ),
			st( 0.218393, 0.998065 ),
			st( 0.106278, 0.966522 ),
			st( 0.326189, 0.998065 ),
			st( 0.326189, 0.996698 ),
			st( 0.218122, 0.998481 ),
			st( 0.218122, 0.998481 ),
			st( 0.326189, 0.996698 ),
			st( 0.003701, 0.991015 ),
			st( 0.216871, 0.639362 ),
			st( 0.105498, 0.637630 ),
			st( 0.216871, 0.639363 ),
			st( 0.104818, 0.637629 ),
			st( 0.326454, 0.639412 ),
			st( 0.326454, 0.639412 ),
			st( 0.217406, 0.639729 ),
			st( 0.004985, 0.638057 ),
			st( 0.325919, 0.639729 ),
			st( 0.003499, 0.638057 ),
			st( 0.218393, 0.998065 ),
			st( 0.003433, 0.990466 ),
			st( 0.326189, 0.998065 ),
			st( 0.326189, 0.996698 ),
			st( 0.218122, 0.998481 ),
			st( 0.218122, 0.998481 ),
			st( 0.326189, 0.996698 ),
			st( 0.106545, 0.967071 ),
			st( 0.216871, 0.639362 ),
			st( 0.005157, 0.638004 ),
			st( 0.216871, 0.639363 ),
			st( 0.004477, 0.638004 ),
			st( 0.326454, 0.639412 ),
			st( 0.326454, 0.639412 ),
			st( 0.217406, 0.639729 ),
			st( 0.105326, 0.637682 ),
			st( 0.325919, 0.639729 ),
			st( 0.105091, 0.637682 ),
			st( 0.218393, 0.998065 ),
			st( 0.106278, 0.966522 ),
			st( 0.326189, 0.998065 ),
			st( 0.326189, 0.996698 ),
			st( 0.218122, 0.998481 ),
			st( 0.218122, 0.998481 ),
			st( 0.326189, 0.996698 ),
			st( 0.003701, 0.991015 ),
			st( 0.216871, 0.639362 ),
			st( 0.105498, 0.637630 ),
			st( 0.216871, 0.639363 ),
			st( 0.104818, 0.637629 ),
			st( 0.326454, 0.639412 ),
			st( 0.326454, 0.639412 ),
			st( 0.217406, 0.639729 ),
			st( 0.004985, 0.638057 ),
			st( 0.325919, 0.639729 ),
			st( 0.003499, 0.638057 ),
			st( 0.544386, 0.998065 ),
			st( 0.003433, 0.990466 ),
			st( 0.653352, 0.997841 ),
			st( 0.653352, 0.998431 ),
			st( 0.544386, 0.998207 ),
			st( 0.544386, 0.998207 ),
			st( 0.653352, 0.998431 ),
			st( 0.106545, 0.967071 ),
			st( 0.544386, 0.641046 ),
			st( 0.005157, 0.638004 ),
			st( 0.544386, 0.641046 ),
			st( 0.004477, 0.638004 ),
			st( 0.653887, 0.639039 ),
			st( 0.653887, 0.639039 ),
			st( 0.543670, 0.639356 ),
			st( 0.105326, 0.637682 ),
			st( 0.653352, 0.641412 ),
			st( 0.105091, 0.637682 ),
			st( 0.544386, 0.998065 ),
			st( 0.106278, 0.966522 ),
			st( 0.653352, 0.997841 ),
			st( 0.653352, 0.998431 ),
			st( 0.544386, 0.998207 ),
			st( 0.544386, 0.998207 ),
			st( 0.653352, 0.998431 ),
			st( 0.003701, 0.991015 ),
			st( 0.544386, 0.641046 ),
			st( 0.105498, 0.637630 ),
			st( 0.544386, 0.641046 ),
			st( 0.104818, 0.637629 ),
			st( 0.653887, 0.639039 ),
			st( 0.653887, 0.639039 ),
			st( 0.543670, 0.639356 ),
			st( 0.004985, 0.638057 ),
			st( 0.653352, 0.641412 ),
			st( 0.003499, 0.638057 ),
			st( 0.436049, 0.998065 ),
			st( 0.003433, 0.990466 ),
			st( 0.544826, 0.997841 ),
			st( 0.544826, 0.998431 ),
			st( 0.436049, 0.998207 ),
			st( 0.436049, 0.998207 ),
			st( 0.544826, 0.998431 ),
			st( 0.106545, 0.967071 ),
			st( 0.437300, 0.639362 ),
			st( 0.005157, 0.638004 ),
			st( 0.437300, 0.639363 ),
			st( 0.004477, 0.638004 ),
			st( 0.544110, 0.639089 ),
			st( 0.544110, 0.639089 ),
			st( 0.436584, 0.639455 ),
			st( 0.105326, 0.637682 ),
			st( 0.543575, 0.641412 ),
			st( 0.105091, 0.637682 ),
			st( 0.436049, 0.998065 ),
			st( 0.106278, 0.966522 ),
			st( 0.544826, 0.997841 ),
			st( 0.544826, 0.998431 ),
			st( 0.436049, 0.998207 ),
			st( 0.436049, 0.998207 ),
			st( 0.544826, 0.998431 ),
			st( 0.003701, 0.991015 ),
			st( 0.437300, 0.639362 ),
			st( 0.105498, 0.637630 ),
			st( 0.437300, 0.639363 ),
			st( 0.104818, 0.637629 ),
			st( 0.544110, 0.639089 ),
			st( 0.544110, 0.639089 ),
			st( 0.436584, 0.639455 ),
			st( 0.004985, 0.638057 ),
			st( 0.543575, 0.641412 ),
			st( 0.003499, 0.638057 ),
			st( 0.436049, 0.998065 ),
			st( 0.003433, 0.990466 ),
			st( 0.544826, 0.997841 ),
			st( 0.544826, 0.998431 ),
			st( 0.436049, 0.998207 ),
			st( 0.436049, 0.998207 ),
			st( 0.544826, 0.998431 ),
			st( 0.106545, 0.967071 ),
			st( 0.437300, 0.639362 ),
			st( 0.005157, 0.638004 ),
			st( 0.437300, 0.639363 ),
			st( 0.004477, 0.638004 ),
			st( 0.544110, 0.639089 ),
			st( 0.544110, 0.639089 ),
			st( 0.436584, 0.639455 ),
			st( 0.105326, 0.637682 ),
			st( 0.543575, 0.641412 ),
			st( 0.105091, 0.637682 ),
			st( 0.436049, 0.998065 ),
			st( 0.106278, 0.966522 ),
			st( 0.544826, 0.997841 ),
			st( 0.544826, 0.998431 ),
			st( 0.436049, 0.998207 ),
			st( 0.436049, 0.998207 ),
			st( 0.544826, 0.998431 ),
			st( 0.003701, 0.991015 ),
			st( 0.437300, 0.639362 ),
			st( 0.105498, 0.637630 ),
			st( 0.437300, 0.639363 ),
			st( 0.104818, 0.637629 ),
			st( 0.544110, 0.639089 ),
			st( 0.544110, 0.639089 ),
			st( 0.436584, 0.639455 ),
			st( 0.004985, 0.638057 ),
			st( 0.543575, 0.641412 ),
			st( 0.003499, 0.638057 ),
			st( 0.326460, 0.996332 ),
			st( 0.003433, 0.990466 ),
			st( 0.436489, 0.997841 ),
			st( 0.436489, 0.996698 ),
			st( 0.326460, 0.998207 ),
			st( 0.326460, 0.998207 ),
			st( 0.436489, 0.996698 ),
			st( 0.106545, 0.967071 ),
			st( 0.326460, 0.639313 ),
			st( 0.005157, 0.638004 ),
			st( 0.326460, 0.639313 ),
			st( 0.004477, 0.638004 ),
			st( 0.437024, 0.639089 ),
			st( 0.437024, 0.639089 ),
			st( 0.325743, 0.639455 ),
			st( 0.105326, 0.637682 ),
			st( 0.436489, 0.639679 ),
			st( 0.105091, 0.637682 ),
			st( 0.326460, 0.996332 ),
			st( 0.106278, 0.966522 ),
			st( 0.436489, 0.997841 ),
			st( 0.436489, 0.996698 ),
			st( 0.326460, 0.998207 ),
			st( 0.326460, 0.998207 ),
			st( 0.436489, 0.996698 ),
			st( 0.003701, 0.991015 ),
			st( 0.326460, 0.639313 ),
			st( 0.105498, 0.637630 ),
			st( 0.326460, 0.639313 ),
			st( 0.104818, 0.637629 ),
			st( 0.437024, 0.639089 ),
			st( 0.437024, 0.639089 ),
			st( 0.325743, 0.639455 ),
			st( 0.004985, 0.638057 ),
			st( 0.436489, 0.639679 ),
			st( 0.003499, 0.638057 ),
			st( 0.326460, 0.996332 ),
			st( 0.003433, 0.990466 ),
			st( 0.436489, 0.997841 ),
			st( 0.436489, 0.996698 ),
			st( 0.326460, 0.998207 ),
			st( 0.326460, 0.998207 ),
			st( 0.436489, 0.996698 ),
			st( 0.106545, 0.967071 ),
			st( 0.326460, 0.639313 ),
			st( 0.005157, 0.638004 ),
			st( 0.326460, 0.639313 ),
			st( 0.004477, 0.638004 ),
			st( 0.437024, 0.639089 ),
			st( 0.437024, 0.639089 ),
			st( 0.325743, 0.639455 ),
			st( 0.105326, 0.637682 ),
			st( 0.436489, 0.639679 ),
			st( 0.105091, 0.637682 ),
			st( 0.326460, 0.996332 ),
			st( 0.106278, 0.966522 ),
			st( 0.436489, 0.997841 ),
			st( 0.436489, 0.996698 ),
			st( 0.326460, 0.998207 ),
			st( 0.326460, 0.998207 ),
			st( 0.436489, 0.996698 ),
			st( 0.003701, 0.991015 ),
			st( 0.326460, 0.639313 ),
			st( 0.105498, 0.637630 ),
			st( 0.326460, 0.639313 ),
			st( 0.104818, 0.637629 ),
			st( 0.437024, 0.639089 ),
			st( 0.437024, 0.639089 ),
			st( 0.325743, 0.639455 ),
			st( 0.004985, 0.638057 ),
			st( 0.436489, 0.639679 ),
			st( 0.003499, 0.638057 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 3, 8), 0 ),
		polygon ((0, 2, 3),(1, 9, 11), 0 ),
		polygon ((1, 3, 4),(4, 12, 14), 0 ),
		polygon ((0, 3, 1),(2, 13, 5), 0 ),
		polygon ((2, 1, 5),(10, 6, 16), 0 ),
		polygon ((5, 1, 4),(17, 7, 15), 0 ),
		polygon ((6, 7, 8),(18, 21, 26), 0 ),
		polygon ((6, 8, 9),(19, 27, 29), 0 ),
		polygon ((7, 9, 10),(22, 30, 32), 0 ),
		polygon ((6, 9, 7),(20, 31, 23), 0 ),
		polygon ((8, 7, 11),(28, 24, 34), 0 ),
		polygon ((11, 7, 10),(35, 25, 33), 0 ),
		polygon ((12, 13, 14),(36, 39, 44), 0 ),
		polygon ((12, 14, 15),(37, 45, 47), 0 ),
		polygon ((13, 15, 16),(40, 48, 50), 0 ),
		polygon ((12, 15, 13),(38, 49, 41), 0 ),
		polygon ((14, 13, 17),(46, 42, 52), 0 ),
		polygon ((17, 13, 16),(53, 43, 51), 0 ),
		polygon ((18, 19, 20),(54, 57, 62), 0 ),
		polygon ((18, 20, 21),(55, 63, 65), 0 ),
		polygon ((19, 21, 22),(58, 66, 68), 0 ),
		polygon ((18, 21, 19),(56, 67, 59), 0 ),
		polygon ((20, 19, 23),(64, 60, 70), 0 ),
		polygon ((23, 19, 22),(71, 61, 69), 0 ),
		polygon ((24, 25, 26),(72, 75, 80), 0 ),
		polygon ((24, 26, 27),(73, 81, 83), 0 ),
		polygon ((25, 27, 28),(76, 84, 86), 0 ),
		polygon ((24, 27, 25),(74, 85, 77), 0 ),
		polygon ((26, 25, 29),(82, 78, 88), 0 ),
		polygon ((29, 25, 28),(89, 79, 87), 0 ),
		polygon ((30, 31, 32),(90, 93, 98), 0 ),
		polygon ((30, 32, 33),(91, 99, 101), 0 ),
		polygon ((31, 33, 34),(94, 102, 104), 0 ),
		polygon ((30, 33, 31),(92, 103, 95), 0 ),
		polygon ((32, 31, 35),(100, 96, 106), 0 ),
		polygon ((35, 31, 34),(107, 97, 105), 0 ),
		polygon ((36, 37, 38),(108, 111, 116), 0 ),
		polygon ((36, 38, 39),(109, 117, 119), 0 ),
		polygon ((37, 39, 40),(112, 120, 122), 0 ),
		polygon ((36, 39, 37),(110, 121, 113), 0 ),
		polygon ((38, 37, 41),(118, 114, 124), 0 ),
		polygon ((41, 37, 40),(125, 115, 123), 0 ),
		polygon ((42, 43, 44),(126, 129, 134), 0 ),
		polygon ((42, 44, 45),(127, 135, 137), 0 ),
		polygon ((43, 45, 46),(130, 138, 140), 0 ),
		polygon ((42, 45, 43),(128, 139, 131), 0 ),
		polygon ((44, 43, 47),(136, 132, 142), 0 ),
		polygon ((47, 43, 46),(143, 133, 141), 0 ),
		polygon ((48, 49, 50),(144, 147, 152), 0 ),
		polygon ((48, 50, 51),(145, 153, 155), 0 ),
		polygon ((49, 51, 52),(148, 156, 158), 0 ),
		polygon ((48, 51, 49),(146, 157, 149), 0 ),
		polygon ((50, 49, 53),(154, 150, 160), 0 ),
		polygon ((53, 49, 52),(161, 151, 159), 0 ),
		polygon ((54, 55, 56),(162, 165, 170), 0 ),
		polygon ((54, 56, 57),(163, 171, 173), 0 ),
		polygon ((55, 57, 58),(166, 174, 176), 0 ),
		polygon ((54, 57, 55),(164, 175, 167), 0 ),
		polygon ((56, 55, 59),(172, 168, 178), 0 ),
		polygon ((59, 55, 58),(179, 169, 177), 0 ),
		polygon ((60, 61, 62),(180, 183, 188), 0 ),
		polygon ((60, 62, 63),(181, 189, 191), 0 ),
		polygon ((61, 63, 64),(184, 192, 194), 0 ),
		polygon ((60, 63, 61),(182, 193, 185), 0 ),
		polygon ((62, 61, 65),(190, 186, 196), 0 ),
		polygon ((65, 61, 64),(197, 187, 195), 0 ),
		polygon ((66, 67, 68),(198, 201, 206), 0 ),
		polygon ((66, 68, 69),(199, 207, 209), 0 ),
		polygon ((67, 69, 70),(202, 210, 212), 0 ),
		polygon ((66, 69, 67),(200, 211, 203), 0 ),
		polygon ((68, 67, 71),(208, 204, 214), 0 ),
		polygon ((71, 67, 70),(215, 205, 213), 0 ),
		polygon ((72, 73, 74),(216, 219, 224), 0 ),
		polygon ((72, 74, 75),(217, 225, 227), 0 ),
		polygon ((73, 75, 76),(220, 228, 230), 0 ),
		polygon ((72, 75, 73),(218, 229, 221), 0 ),
		polygon ((74, 73, 77),(226, 222, 232), 0 ),
		polygon ((77, 73, 76),(233, 223, 231), 0 ),
		polygon ((78, 79, 80),(234, 237, 242), 0 ),
		polygon ((78, 80, 81),(235, 243, 245), 0 ),
		polygon ((79, 81, 82),(238, 246, 248), 0 ),
		polygon ((78, 81, 79),(236, 247, 239), 0 ),
		polygon ((80, 79, 83),(244, 240, 250), 0 ),
		polygon ((83, 79, 82),(251, 241, 249), 0 ),
		polygon ((84, 85, 86),(252, 255, 260), 0 ),
		polygon ((84, 86, 87),(253, 261, 263), 0 ),
		polygon ((85, 87, 88),(256, 264, 266), 0 ),
		polygon ((84, 87, 85),(254, 265, 257), 0 ),
		polygon ((86, 85, 89),(262, 258, 268), 0 ),
		polygon ((89, 85, 88),(269, 259, 267), 0 ),
		polygon ((90, 91, 92),(270, 273, 278), 0 ),
		polygon ((90, 92, 93),(271, 279, 281), 0 ),
		polygon ((91, 93, 94),(274, 282, 284), 0 ),
		polygon ((90, 93, 91),(272, 283, 275), 0 ),
		polygon ((92, 91, 95),(280, 276, 286), 0 ),
		polygon ((95, 91, 94),(287, 277, 285), 0 ),
		polygon ((96, 97, 98),(288, 291, 296), 0 ),
		polygon ((96, 98, 99),(289, 297, 299), 0 ),
		polygon ((97, 99, 100),(292, 300, 302), 0 ),
		polygon ((96, 99, 97),(290, 301, 293), 0 ),
		polygon ((98, 97, 101),(298, 294, 304), 0 ),
		polygon ((101, 97, 100),(305, 295, 303), 0 ),
		polygon ((102, 103, 104),(306, 309, 314), 0 ),
		polygon ((102, 104, 105),(307, 315, 317), 0 ),
		polygon ((103, 105, 106),(310, 318, 320), 0 ),
		polygon ((102, 105, 103),(308, 319, 311), 0 ),
		polygon ((104, 103, 107),(316, 312, 322), 0 ),
		polygon ((107, 103, 106),(323, 313, 321), 0 ),
		polygon ((108, 109, 110),(324, 327, 332), 0 ),
		polygon ((108, 110, 111),(325, 333, 335), 0 ),
		polygon ((109, 111, 112),(328, 336, 338), 0 ),
		polygon ((108, 111, 109),(326, 337, 329), 0 ),
		polygon ((110, 109, 113),(334, 330, 340), 0 ),
		polygon ((113, 109, 112),(341, 331, 339), 0 ),
		polygon ((114, 115, 116),(342, 345, 350), 0 ),
		polygon ((114, 116, 117),(343, 351, 353), 0 ),
		polygon ((115, 117, 118),(346, 354, 356), 0 ),
		polygon ((114, 117, 115),(344, 355, 347), 0 ),
		polygon ((116, 115, 119),(352, 348, 358), 0 ),
		polygon ((119, 115, 118),(359, 349, 357), 0 ),
		polygon ((120, 121, 122),(360, 363, 368), 0 ),
		polygon ((120, 122, 123),(361, 369, 371), 0 ),
		polygon ((121, 123, 124),(364, 372, 374), 0 ),
		polygon ((120, 123, 121),(362, 373, 365), 0 ),
		polygon ((122, 121, 125),(370, 366, 376), 0 ),
		polygon ((125, 121, 124),(377, 367, 375), 0 ),
		polygon ((126, 127, 128),(378, 381, 386), 0 ),
		polygon ((126, 128, 129),(379, 387, 389), 0 ),
		polygon ((127, 129, 130),(382, 390, 392), 0 ),
		polygon ((126, 129, 127),(380, 391, 383), 0 ),
		polygon ((128, 127, 131),(388, 384, 394), 0 ),
		polygon ((131, 127, 130),(395, 385, 393), 0 )
	)
); /* end of polyset 'yardmarkers_obj' */

polyset fieldnumbers_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (numbers ),
	casts_shadow = TRUE,
	vertices = ((cv((4.823519, 0.0, 1.489953), 1)),
			(cv((4.823519, 0.0, 1.217835), 1)),
			(cv((5.032309, 0.0, 1.217835), 1)),
			(cv((5.032309, 0.0, 1.489953), 1)),
			(cv((-1.150051, 0.0, -1.215228), 1)),
			(cv((-1.150051, 0.0, -1.48788), 1)),
			(cv((-0.947725, 0.0, -1.48788), 1)),
			(cv((-0.947725, 0.0, -1.215228), 1)),
			(cv((-1.450069, 0.0, -1.217835), 1)),
			(cv((-1.450069, 0.0, -1.489953), 1)),
			(cv((-1.241279, 0.0, -1.489953), 1)),
			(cv((-1.241279, 0.0, -1.217835), 1)),
			(cv((-2.345584, 0.0, -1.217927), 1)),
			(cv((-2.345584, 0.0, -1.492181), 1)),
			(cv((-2.14176, 0.0, -1.492181), 1)),
			(cv((-2.14176, 0.0, -1.217927), 1)),
			(cv((-2.633041, 0.0, -1.217835), 1)),
			(cv((-2.633041, 0.0, -1.489953), 1)),
			(cv((-2.424251, 0.0, -1.489953), 1)),
			(cv((-2.424251, 0.0, -1.217835), 1)),
			(cv((-3.539674, 0.0, -1.216048), 1)),
			(cv((-3.539674, 0.0, -1.494691), 1)),
			(cv((-3.343117, 0.0, -1.494691), 1)),
			(cv((-3.343117, 0.0, -1.216048), 1)),
			(cv((-3.838603, 0.0, -1.217835), 1)),
			(cv((-3.838603, 0.0, -1.489953), 1)),
			(cv((-3.629812, 0.0, -1.489953), 1)),
			(cv((-3.629812, 0.0, -1.217835), 1)),
			(cv((-3.34107, 0.0, 1.217835), 1)),
			(cv((-3.34107, 0.0, 1.489953), 1)),
			(cv((-3.549861, 0.0, 1.489953), 1)),
			(cv((-3.549861, 0.0, 1.217835), 1)),
			(cv((-2.150625, 0.0, 1.217835), 1)),
			(cv((-2.150625, 0.0, 1.489953), 1)),
			(cv((-2.359415, 0.0, 1.489953), 1)),
			(cv((-2.359415, 0.0, 1.217835), 1)),
			(cv((-0.954286, 0.0, 1.217835), 1)),
			(cv((-0.954286, 0.0, 1.489953), 1)),
			(cv((-1.163076, 0.0, 1.489953), 1)),
			(cv((-1.236597, 0.0, 1.215228), 1)),
			(cv((-1.236597, 0.0, 1.48788), 1)),
			(cv((-1.438924, 0.0, 1.48788), 1)),
			(cv((4.820189, 0.0, -1.219073), 1)),
			(cv((4.820189, 0.0, -1.487269), 1)),
			(cv((4.984448, 0.0, -1.487269), 1)),
			(cv((4.984448, 0.0, -1.219073), 1)),
			(cv((-1.163076, 0.0, 1.217835), 1)),
			(cv((0.247946, 0.0, 1.217835), 1)),
			(cv((0.247946, 0.0, 1.489953), 1)),
			(cv((0.039156, 0.0, 1.489953), 1)),
			(cv((-5.026964, 0.0, -1.217835), 1)),
			(cv((-5.026964, 0.0, -1.489953), 1)),
			(cv((-4.818174, 0.0, -1.489953), 1)),
			(cv((-4.818174, 0.0, -1.217835), 1)),
			(cv((0.039156, 0.0, 1.217835), 1)),
			(cv((-4.755491, 0.0, -1.219073), 1)),
			(cv((-4.755491, 0.0, -1.487269), 1)),
			(cv((-4.591232, 0.0, -1.487269), 1)),
			(cv((2.444455, 0.0, -1.217927), 1)),
			(cv((2.444455, 0.0, -1.492181), 1)),
			(cv((2.648278, 0.0, -1.492181), 1)),
			(cv((2.648278, 0.0, -1.217927), 1)),
			(cv((-4.591232, 0.0, -1.219073), 1)),
			(cv((2.148259, 0.0, 1.492181), 1)),
			(cv((2.148259, 0.0, 1.217927), 1)),
			(cv((2.352082, 0.0, 1.217927), 1)),
			(cv((2.643173, 0.0, 1.217835), 1)),
			(cv((2.643173, 0.0, 1.489953), 1)),
			(cv((2.434383, 0.0, 1.489953), 1)),
			(cv((2.434383, 0.0, 1.217835), 1)),
			(cv((1.453896, 0.0, 1.217835), 1)),
			(cv((1.453896, 0.0, 1.489953), 1)),
			(cv((1.245106, 0.0, 1.489953), 1)),
			(cv((1.245106, 0.0, 1.217835), 1)),
			(cv((1.159357, 0.0, 1.215228), 1)),
			(cv((1.159357, 0.0, 1.48788), 1)),
			(cv((0.95703, 0.0, 1.48788), 1)),
			(cv((0.95703, 0.0, 1.215228), 1)),
			(cv((1.251118, 0.0, -1.215228), 1)),
			(cv((1.251118, 0.0, -1.48788), 1)),
			(cv((1.453444, 0.0, -1.48788), 1)),
			(cv((1.453444, 0.0, -1.215228), 1)),
			(cv((3.347443, 0.0, -1.217835), 1)),
			(cv((3.347443, 0.0, -1.489953), 1)),
			(cv((3.556233, 0.0, -1.489953), 1)),
			(cv((3.556233, 0.0, -1.217835), 1)),
			(cv((2.150625, 0.0, -1.217835), 1)),
			(cv((2.150625, 0.0, -1.489953), 1)),
			(cv((2.359415, 0.0, -1.489953), 1)),
			(cv((2.359415, 0.0, -1.217835), 1)),
			(cv((0.954286, 0.0, -1.217835), 1)),
			(cv((0.954286, 0.0, -1.489953), 1)),
			(cv((1.163076, 0.0, -1.489953), 1)),
			(cv((1.163076, 0.0, -1.217835), 1)),
			(cv((-0.247946, 0.0, -1.217835), 1)),
			(cv((-0.247946, 0.0, -1.489953), 1)),
			(cv((-0.039156, 0.0, -1.489953), 1)),
			(cv((-0.039156, 0.0, -1.217835), 1)),
			(cv((-1.438924, 0.0, 1.215228), 1)),
			(cv((4.54553, 0.0, -1.217835), 1)),
			(cv((4.54553, 0.0, -1.489953), 1)),
			(cv((4.75432, 0.0, -1.489953), 1)),
			(cv((0.053056, 0.0, -1.215653), 1)),
			(cv((0.053056, 0.0, -1.491106), 1)),
			(cv((0.249371, 0.0, -1.491106), 1)),
			(cv((0.249371, 0.0, -1.215653), 1)),
			(cv((4.75432, 0.0, -1.217835), 1)),
			(cv((3.545111, 0.0, 1.216048), 1)),
			(cv((3.545111, 0.0, 1.494691), 1)),
			(cv((3.348554, 0.0, 1.494691), 1)),
			(cv((-0.044251, 0.0, 1.215653), 1)),
			(cv((-0.044251, 0.0, 1.491106), 1)),
			(cv((-0.240566, 0.0, 1.491106), 1)),
			(cv((-0.240566, 0.0, 1.215653), 1)),
			(cv((3.348554, 0.0, 1.216048), 1)),
			(cv((3.841301, 0.0, 1.217835), 1)),
			(cv((3.841301, 0.0, 1.489953), 1)),
			(cv((3.632511, 0.0, 1.489953), 1)),
			(cv((3.632511, 0.0, 1.217835), 1)),
			(cv((2.352082, 0.0, 1.492181), 1)),
			(cv((-4.535971, 0.0, 1.217835), 1)),
			(cv((-4.535971, 0.0, 1.489953), 1)),
			(cv((-4.744761, 0.0, 1.489953), 1)),
			(cv((-4.744761, 0.0, 1.217835), 1)),
			(cv((3.639999, 0.0, -1.216048), 1)),
			(cv((3.639999, 0.0, -1.494691), 1)),
			(cv((3.836556, 0.0, -1.494691), 1)),
			(cv((3.836556, 0.0, -1.216048), 1)),
			(cv((-4.813816, 0.0, 1.219073), 1)),
			(cv((-4.813816, 0.0, 1.487269), 1)),
			(cv((-4.978075, 0.0, 1.487269), 1)),
			(cv((-4.978075, 0.0, 1.219073), 1)),
			(cv((-3.639999, 0.0, 1.216048), 1)),
			(cv((-3.639999, 0.0, 1.494691), 1)),
			(cv((-3.836556, 0.0, 1.494691), 1)),
			(cv((-3.836556, 0.0, 1.216048), 1)),
			(cv((-2.426748, 0.0, 1.217927), 1)),
			(cv((-2.426748, 0.0, 1.492181), 1)),
			(cv((-2.630572, 0.0, 1.492181), 1)),
			(cv((-2.630572, 0.0, 1.217927), 1)),
			(cv((4.761731, 0.0, 1.219073), 1)),
			(cv((4.761731, 0.0, 1.487269), 1)),
			(cv((4.597471, 0.0, 1.487269), 1)),
			(cv((4.597471, 0.0, 1.219073), 1)),
			(cv((3.918776, 0.0, 1.439698), 1)),
			(cv((3.918781, 0.0, 1.294681), 1)),
			(cv((4.084799, 0.0, 1.366508), 1)),
			(cv((5.122843, 0.0, 1.439698), 1)),
			(cv((5.122848, 0.0, 1.294681), 1)),
			(cv((5.288865, 0.0, 1.366508), 1)),
			(cv((2.705447, 0.0, 1.436611), 1)),
			(cv((2.705452, 0.0, 1.291594), 1)),
			(cv((2.87147, 0.0, 1.363421), 1)),
			(cv((1.516817, 0.0, 1.436611), 1)),
			(cv((1.516822, 0.0, 1.291594), 1)),
			(cv((1.68284, 0.0, 1.363421), 1)),
			(cv((1.516817, 0.0, -1.289391), 1)),
			(cv((1.516822, 0.0, -1.434407), 1)),
			(cv((1.68284, 0.0, -1.36258), 1)),
			(cv((2.693098, 0.0, -1.289391), 1)),
			(cv((2.693103, 0.0, -1.434407), 1)),
			(cv((2.85912, 0.0, -1.36258), 1)),
			(cv((3.906427, 0.0, -1.289391), 1)),
			(cv((3.906431, 0.0, -1.434407), 1)),
			(cv((4.072449, 0.0, -1.36258), 1)),
			(cv((5.088882, 0.0, -1.289391), 1)),
			(cv((5.088887, 0.0, -1.434407), 1)),
			(cv((5.254904, 0.0, -1.36258), 1)),
			(cv((-1.526153, 0.0, -1.433449), 1)),
			(cv((-1.526158, 0.0, -1.288432), 1)),
			(cv((-1.692175, 0.0, -1.36026), 1)),
			(cv((-2.712452, 0.0, -1.433449), 1)),
			(cv((-2.712456, 0.0, -1.288432), 1)),
			(cv((-2.878474, 0.0, -1.36026), 1)),
			(cv((-3.925529, 0.0, -1.433449), 1)),
			(cv((-3.925534, 0.0, -1.288432), 1)),
			(cv((-4.091551, 0.0, -1.36026), 1)),
			(cv((-5.133251, 0.0, -1.433449), 1)),
			(cv((-5.133255, 0.0, -1.288432), 1)),
			(cv((-5.299273, 0.0, -1.36026), 1)),
			(cv((-5.086588, 0.0, 1.288426), 1)),
			(cv((-5.086592, 0.0, 1.433443), 1)),
			(cv((-5.25261, 0.0, 1.361616), 1)),
			(cv((-3.909645, 0.0, 1.288426), 1)),
			(cv((-3.90965, 0.0, 1.433443), 1)),
			(cv((-4.075667, 0.0, 1.361616), 1)),
			(cv((-2.692845, 0.0, 1.288426), 1)),
			(cv((-2.69285, 0.0, 1.433443), 1)),
			(cv((-2.858868, 0.0, 1.361616), 1)),
			(cv((-1.514145, 0.0, 1.288426), 1)),
			(cv((-1.51415, 0.0, 1.433443), 1)),
			(cv((-1.680168, 0.0, 1.361616), 1))	),
	texture_vertices = (
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.302393, 0.567245 ),
			st( 0.302393, 0.202182 ),
			st( 0.031490, 0.202182 ),
			st( 0.031490, 0.567245 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.865907, 0.961584 ),
			st( 0.865907, 0.594375 ),
			st( 0.593000, 0.594375 ),
			st( 0.593000, 0.961584 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.571045, 0.965546 ),
			st( 0.571045, 0.592460 ),
			st( 0.307868, 0.592460 ),
			st( 0.307868, 0.965546 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.302393, 0.567245 ),
			st( 0.302393, 0.202182 ),
			st( 0.031490, 0.202182 ),
			st( 0.283876, 0.961496 ),
			st( 0.283876, 0.602398 ),
			st( 0.063943, 0.602398 ),
			st( 0.063943, 0.961496 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.610094, 0.558306 ),
			st( 0.283876, 0.961496 ),
			st( 0.283876, 0.602398 ),
			st( 0.063943, 0.602398 ),
			st( 0.865907, 0.961584 ),
			st( 0.865907, 0.594375 ),
			st( 0.593000, 0.594375 ),
			st( 0.593000, 0.961584 ),
			st( 0.063943, 0.961496 ),
			st( 0.593000, 0.594375 ),
			st( 0.593000, 0.961584 ),
			st( 0.865907, 0.961584 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.302393, 0.567245 ),
			st( 0.302393, 0.202182 ),
			st( 0.031490, 0.202182 ),
			st( 0.031490, 0.567245 ),
			st( 0.302393, 0.567245 ),
			st( 0.302393, 0.202182 ),
			st( 0.031490, 0.202182 ),
			st( 0.031490, 0.567245 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.031490, 0.567245 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.601626, 0.566676 ),
			st( 0.601626, 0.197862 ),
			st( 0.338773, 0.197862 ),
			st( 0.338773, 0.566676 ),
			st( 0.610094, 0.558306 ),
			st( 0.571045, 0.965546 ),
			st( 0.571045, 0.592460 ),
			st( 0.307868, 0.592460 ),
			st( 0.601626, 0.566676 ),
			st( 0.601626, 0.197862 ),
			st( 0.338773, 0.197862 ),
			st( 0.338773, 0.566676 ),
			st( 0.307868, 0.965546 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.865907, 0.594375 ),
			st( 0.889651, 0.558306 ),
			st( 0.889651, 0.193957 ),
			st( 0.610094, 0.193957 ),
			st( 0.610094, 0.558306 ),
			st( 0.571045, 0.965546 ),
			st( 0.571045, 0.592460 ),
			st( 0.307868, 0.592460 ),
			st( 0.307868, 0.965546 ),
			st( 0.283876, 0.961496 ),
			st( 0.283876, 0.602398 ),
			st( 0.063943, 0.602398 ),
			st( 0.063943, 0.961496 ),
			st( 0.571045, 0.965546 ),
			st( 0.571045, 0.592460 ),
			st( 0.307868, 0.592460 ),
			st( 0.307868, 0.965546 ),
			st( 0.865907, 0.961584 ),
			st( 0.865907, 0.594375 ),
			st( 0.593000, 0.594375 ),
			st( 0.593000, 0.961584 ),
			st( 0.283876, 0.961496 ),
			st( 0.283876, 0.602398 ),
			st( 0.063943, 0.602398 ),
			st( 0.063943, 0.961496 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ),
			st( 0.250909, 0.205379 ),
			st( 0.250903, 0.011235 ),
			st( 0.028643, 0.107395 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 3, 0),(2, 3, 0), 0 ),
		polygon ((4, 5, 6),(4, 5, 6), 0 ),
		polygon ((6, 7, 4),(6, 7, 4), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 11, 8),(10, 11, 8), 0 ),
		polygon ((12, 13, 14),(12, 13, 14), 0 ),
		polygon ((14, 15, 12),(14, 15, 12), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 0 ),
		polygon ((18, 19, 16),(18, 19, 16), 0 ),
		polygon ((20, 21, 22),(20, 21, 22), 0 ),
		polygon ((22, 23, 20),(22, 23, 20), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 27, 24),(26, 27, 24), 0 ),
		polygon ((28, 29, 30),(28, 29, 30), 0 ),
		polygon ((30, 31, 28),(30, 31, 28), 0 ),
		polygon ((32, 33, 34),(32, 33, 34), 0 ),
		polygon ((34, 35, 32),(34, 35, 32), 0 ),
		polygon ((36, 37, 38),(36, 37, 38), 0 ),
		polygon ((39, 40, 41),(39, 40, 41), 0 ),
		polygon ((42, 43, 44),(42, 43, 44), 0 ),
		polygon ((44, 45, 42),(44, 45, 42), 0 ),
		polygon ((38, 46, 36),(38, 46, 36), 0 ),
		polygon ((47, 48, 49),(47, 48, 49), 0 ),
		polygon ((50, 51, 52),(50, 51, 52), 0 ),
		polygon ((52, 53, 50),(52, 53, 50), 0 ),
		polygon ((49, 54, 47),(49, 54, 47), 0 ),
		polygon ((55, 56, 57),(55, 56, 57), 0 ),
		polygon ((58, 59, 60),(58, 59, 60), 0 ),
		polygon ((60, 61, 58),(60, 61, 58), 0 ),
		polygon ((57, 62, 55),(57, 62, 55), 0 ),
		polygon ((63, 64, 65),(63, 64, 65), 0 ),
		polygon ((66, 67, 68),(66, 67, 68), 0 ),
		polygon ((68, 69, 66),(68, 69, 66), 0 ),
		polygon ((70, 71, 72),(70, 71, 72), 0 ),
		polygon ((72, 73, 70),(72, 73, 70), 0 ),
		polygon ((74, 75, 76),(74, 75, 76), 0 ),
		polygon ((76, 77, 74),(76, 77, 74), 0 ),
		polygon ((78, 79, 80),(78, 79, 80), 0 ),
		polygon ((80, 81, 78),(80, 81, 78), 0 ),
		polygon ((82, 83, 84),(82, 83, 84), 0 ),
		polygon ((84, 85, 82),(84, 85, 82), 0 ),
		polygon ((86, 87, 88),(86, 87, 88), 0 ),
		polygon ((88, 89, 86),(88, 89, 86), 0 ),
		polygon ((90, 91, 92),(90, 91, 92), 0 ),
		polygon ((92, 93, 90),(92, 93, 90), 0 ),
		polygon ((94, 95, 96),(94, 95, 96), 0 ),
		polygon ((96, 97, 94),(96, 97, 94), 0 ),
		polygon ((41, 98, 39),(41, 98, 39), 0 ),
		polygon ((99, 100, 101),(99, 100, 101), 0 ),
		polygon ((102, 103, 104),(102, 103, 104), 0 ),
		polygon ((104, 105, 102),(104, 105, 102), 0 ),
		polygon ((101, 106, 99),(101, 106, 99), 0 ),
		polygon ((107, 108, 109),(107, 108, 109), 0 ),
		polygon ((110, 111, 112),(110, 111, 112), 0 ),
		polygon ((112, 113, 110),(112, 113, 110), 0 ),
		polygon ((109, 114, 107),(109, 114, 107), 0 ),
		polygon ((115, 116, 117),(115, 116, 117), 0 ),
		polygon ((117, 118, 115),(117, 118, 115), 0 ),
		polygon ((65, 119, 63),(65, 119, 63), 0 ),
		polygon ((120, 121, 122),(120, 121, 122), 0 ),
		polygon ((122, 123, 120),(122, 123, 120), 0 ),
		polygon ((124, 125, 126),(124, 125, 126), 0 ),
		polygon ((126, 127, 124),(126, 127, 124), 0 ),
		polygon ((128, 129, 130),(128, 129, 130), 0 ),
		polygon ((130, 131, 128),(130, 131, 128), 0 ),
		polygon ((132, 133, 134),(132, 133, 134), 0 ),
		polygon ((134, 135, 132),(134, 135, 132), 0 ),
		polygon ((136, 137, 138),(136, 137, 138), 0 ),
		polygon ((138, 139, 136),(138, 139, 136), 0 ),
		polygon ((140, 141, 142),(140, 141, 142), 0 ),
		polygon ((142, 143, 140),(142, 143, 140), 0 ),
		polygon ((144, 145, 146),(144, 145, 146), 0 ),
		polygon ((147, 148, 149),(147, 148, 149), 0 ),
		polygon ((150, 151, 152),(150, 151, 152), 0 ),
		polygon ((153, 154, 155),(153, 154, 155), 0 ),
		polygon ((156, 157, 158),(156, 157, 158), 0 ),
		polygon ((159, 160, 161),(159, 160, 161), 0 ),
		polygon ((162, 163, 164),(162, 163, 164), 0 ),
		polygon ((165, 166, 167),(165, 166, 167), 0 ),
		polygon ((168, 169, 170),(168, 169, 170), 0 ),
		polygon ((171, 172, 173),(171, 172, 173), 0 ),
		polygon ((174, 175, 176),(174, 175, 176), 0 ),
		polygon ((177, 178, 179),(177, 178, 179), 0 ),
		polygon ((180, 181, 182),(180, 181, 182), 0 ),
		polygon ((183, 184, 185),(183, 184, 185), 0 ),
		polygon ((186, 187, 188),(186, 187, 188), 0 ),
		polygon ((189, 190, 191),(189, 190, 191), 0 )
	)
); /* end of polyset 'fieldnumbers_obj' */

polyset pylons_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (post ),
	casts_shadow = TRUE,
	vertices = ((cv((-6.019031, 0.087013, 3.192541), 1)),
			(cv((-6.018451, 0.087013, 3.168781), 1)),
			(cv((-5.995271, 0.087013, 3.193122), 1)),
			(cv((-5.994691, 0.087013, 3.169362), 1)),
			(cv((-5.995271, -0.000742, 3.193122), 1)),
			(cv((-6.019031, -0.000742, 3.192541), 1)),
			(cv((-6.018451, -0.000742, 3.168781), 1)),
			(cv((-5.994691, -0.000742, 3.169362), 1)),
			(cv((-7.212622, 0.087013, 3.191703), 1)),
			(cv((-7.212042, 0.087013, 3.167943), 1)),
			(cv((-7.188862, 0.087013, 3.192284), 1)),
			(cv((-7.188281, 0.087013, 3.168523), 1)),
			(cv((-7.188862, -0.000742, 3.192284), 1)),
			(cv((-7.212622, -0.000742, 3.191703), 1)),
			(cv((-7.212042, -0.000742, 3.167943), 1)),
			(cv((-7.188281, -0.000742, 3.168523), 1)),
			(cv((-6.017924, 0.087013, -3.170221), 1)),
			(cv((-6.017343, 0.087013, -3.193981), 1)),
			(cv((-5.994164, 0.087013, -3.16964), 1)),
			(cv((-5.993583, 0.087013, -3.1934), 1)),
			(cv((-5.994164, -0.000742, -3.16964), 1)),
			(cv((-6.017924, -0.000742, -3.170221), 1)),
			(cv((-6.017343, -0.000742, -3.193981), 1)),
			(cv((-5.993583, -0.000742, -3.1934), 1)),
			(cv((7.186139, 0.087013, 3.191917), 1)),
			(cv((7.186719, 0.087013, 3.168157), 1)),
			(cv((7.209899, 0.087013, 3.192498), 1)),
			(cv((7.21048, 0.087013, 3.168737), 1)),
			(cv((7.209899, -0.000742, 3.192498), 1)),
			(cv((7.186139, -0.000742, 3.191917), 1)),
			(cv((7.186719, -0.000742, 3.168157), 1)),
			(cv((7.21048, -0.000742, 3.168737), 1)),
			(cv((5.991936, 0.087013, -3.169755), 1)),
			(cv((5.992516, 0.087013, -3.193515), 1)),
			(cv((6.015696, 0.087013, -3.169174), 1)),
			(cv((6.016276, 0.087013, -3.192934), 1)),
			(cv((6.015696, -0.000742, -3.169174), 1)),
			(cv((5.991936, -0.000742, -3.169755), 1)),
			(cv((5.992516, -0.000742, -3.193515), 1)),
			(cv((6.016276, -0.000742, -3.192934), 1)),
			(cv((-7.211979, 0.087013, -3.169241), 1)),
			(cv((-7.211398, 0.087013, -3.193001), 1)),
			(cv((-7.188219, 0.087013, -3.16866), 1)),
			(cv((-7.187638, 0.087013, -3.192421), 1)),
			(cv((-7.188219, -0.000742, -3.16866), 1)),
			(cv((-7.211979, -0.000742, -3.169241), 1)),
			(cv((-7.211398, -0.000742, -3.193001), 1)),
			(cv((-7.187638, -0.000742, -3.192421), 1)),
			(cv((7.187776, 0.087013, -3.167826), 1)),
			(cv((7.188357, 0.087013, -3.191586), 1)),
			(cv((7.211536, 0.087013, -3.167245), 1)),
			(cv((7.212117, 0.087013, -3.191006), 1)),
			(cv((7.211536, -0.000742, -3.167245), 1)),
			(cv((7.187776, -0.000742, -3.167826), 1)),
			(cv((7.188357, -0.000742, -3.191586), 1)),
			(cv((7.212117, -0.000742, -3.191006), 1)),
			(cv((5.991542, 0.087013, 3.191969), 1)),
			(cv((5.992123, 0.087013, 3.168208), 1)),
			(cv((6.015302, 0.087013, 3.192549), 1)),
			(cv((6.015883, 0.087013, 3.168789), 1)),
			(cv((6.015302, -0.000742, 3.192549), 1)),
			(cv((5.991542, -0.000742, 3.191969), 1)),
			(cv((5.992123, -0.000742, 3.168208), 1)),
			(cv((6.015883, -0.000742, 3.168789), 1))	),
	texture_vertices = (
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.377614 ),
			st( 0.898735, 0.377614 ),
			st( 0.546150, 0.052157 ),
			st( 0.546150, 0.052157 ),
			st( 0.898735, 0.052157 ),
			st( 0.898735, 0.052157 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 1, 2), 0 ),
		polygon ((2, 1, 3),(2, 1, 3), 0 ),
		polygon ((2, 4, 0),(2, 4, 0), 0 ),
		polygon ((0, 4, 5),(0, 4, 5), 0 ),
		polygon ((6, 7, 1),(6, 7, 1), 0 ),
		polygon ((1, 7, 3),(1, 7, 3), 0 ),
		polygon ((1, 0, 6),(1, 0, 6), 0 ),
		polygon ((6, 0, 5),(6, 0, 5), 0 ),
		polygon ((4, 2, 7),(4, 2, 7), 0 ),
		polygon ((7, 2, 3),(7, 2, 3), 0 ),
		polygon ((8, 9, 10),(8, 9, 10), 0 ),
		polygon ((10, 9, 11),(10, 9, 11), 0 ),
		polygon ((10, 12, 8),(10, 12, 8), 0 ),
		polygon ((8, 12, 13),(8, 12, 13), 0 ),
		polygon ((14, 15, 9),(14, 15, 9), 0 ),
		polygon ((9, 15, 11),(9, 15, 11), 0 ),
		polygon ((9, 8, 14),(9, 8, 14), 0 ),
		polygon ((14, 8, 13),(14, 8, 13), 0 ),
		polygon ((12, 10, 15),(12, 10, 15), 0 ),
		polygon ((15, 10, 11),(15, 10, 11), 0 ),
		polygon ((16, 17, 18),(16, 17, 18), 0 ),
		polygon ((18, 17, 19),(18, 17, 19), 0 ),
		polygon ((18, 20, 16),(18, 20, 16), 0 ),
		polygon ((16, 20, 21),(16, 20, 21), 0 ),
		polygon ((22, 23, 17),(22, 23, 17), 0 ),
		polygon ((17, 23, 19),(17, 23, 19), 0 ),
		polygon ((17, 16, 22),(17, 16, 22), 0 ),
		polygon ((22, 16, 21),(22, 16, 21), 0 ),
		polygon ((20, 18, 23),(20, 18, 23), 0 ),
		polygon ((23, 18, 19),(23, 18, 19), 0 ),
		polygon ((24, 25, 26),(24, 25, 26), 0 ),
		polygon ((26, 25, 27),(26, 25, 27), 0 ),
		polygon ((26, 28, 24),(26, 28, 24), 0 ),
		polygon ((24, 28, 29),(24, 28, 29), 0 ),
		polygon ((30, 31, 25),(30, 31, 25), 0 ),
		polygon ((25, 31, 27),(25, 31, 27), 0 ),
		polygon ((25, 24, 30),(25, 24, 30), 0 ),
		polygon ((30, 24, 29),(30, 24, 29), 0 ),
		polygon ((28, 26, 31),(28, 26, 31), 0 ),
		polygon ((31, 26, 27),(31, 26, 27), 0 ),
		polygon ((32, 33, 34),(32, 33, 34), 0 ),
		polygon ((34, 33, 35),(34, 33, 35), 0 ),
		polygon ((34, 36, 32),(34, 36, 32), 0 ),
		polygon ((32, 36, 37),(32, 36, 37), 0 ),
		polygon ((38, 39, 33),(38, 39, 33), 0 ),
		polygon ((33, 39, 35),(33, 39, 35), 0 ),
		polygon ((33, 32, 38),(33, 32, 38), 0 ),
		polygon ((38, 32, 37),(38, 32, 37), 0 ),
		polygon ((36, 34, 39),(36, 34, 39), 0 ),
		polygon ((39, 34, 35),(39, 34, 35), 0 ),
		polygon ((40, 41, 42),(40, 41, 42), 0 ),
		polygon ((42, 41, 43),(42, 41, 43), 0 ),
		polygon ((42, 44, 40),(42, 44, 40), 0 ),
		polygon ((40, 44, 45),(40, 44, 45), 0 ),
		polygon ((46, 47, 41),(46, 47, 41), 0 ),
		polygon ((41, 47, 43),(41, 47, 43), 0 ),
		polygon ((41, 40, 46),(41, 40, 46), 0 ),
		polygon ((46, 40, 45),(46, 40, 45), 0 ),
		polygon ((44, 42, 47),(44, 42, 47), 0 ),
		polygon ((47, 42, 43),(47, 42, 43), 0 ),
		polygon ((48, 49, 50),(48, 49, 50), 0 ),
		polygon ((50, 49, 51),(50, 49, 51), 0 ),
		polygon ((50, 52, 48),(50, 52, 48), 0 ),
		polygon ((48, 52, 53),(48, 52, 53), 0 ),
		polygon ((54, 55, 49),(54, 55, 49), 0 ),
		polygon ((49, 55, 51),(49, 55, 51), 0 ),
		polygon ((49, 48, 54),(49, 48, 54), 0 ),
		polygon ((54, 48, 53),(54, 48, 53), 0 ),
		polygon ((52, 50, 55),(52, 50, 55), 0 ),
		polygon ((55, 50, 51),(55, 50, 51), 0 ),
		polygon ((56, 57, 58),(56, 57, 58), 0 ),
		polygon ((58, 57, 59),(58, 57, 59), 0 ),
		polygon ((58, 60, 56),(58, 60, 56), 0 ),
		polygon ((56, 60, 61),(56, 60, 61), 0 ),
		polygon ((62, 63, 57),(62, 63, 57), 0 ),
		polygon ((57, 63, 59),(57, 63, 59), 0 ),
		polygon ((57, 56, 62),(57, 56, 62), 0 ),
		polygon ((62, 56, 61),(62, 56, 61), 0 ),
		polygon ((60, 58, 63),(60, 58, 63), 0 ),
		polygon ((63, 58, 59),(63, 58, 59), 0 )
	)
); /* end of polyset 'pylons_obj' */

polyset goalpost_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (post ),
	casts_shadow = TRUE,
	vertices = ((cv((-7.274496, 0.356949, -0.005349), 1)),
			(cv((-7.201371, 0.400378, -0.005393), 1)),
			(cv((-7.289724, 0.372811, 0.005967), 1)),
			(cv((-7.209212, 0.420585, 0.005504), 1)),
			(cv((-7.349638, 0.228228, 0.005097), 1)),
			(cv((-7.342635, 0.290161, 0.005877), 1)),
			(cv((-7.327974, 0.228228, 0.016327), 1)),
			(cv((-7.323058, 0.277463, 0.016357), 1)),
			(cv((-7.101169, 0.427397, 0.005967), 1)),
			(cv((-7.101221, 0.4064, -0.005349), 1)),
			(cv((-7.32908, 0.228228, -0.005339), 1)),
			(cv((-7.323365, 0.277087, -0.005386), 1)),
			(cv((-7.274707, 0.356838, 0.016275), 1)),
			(cv((-7.10099, 0.406344, 0.016275), 1)),
			(cv((-7.201365, 0.400537, 0.016112), 1)),
			(cv((-7.09618, 1.591455, 0.383381), 1)),
			(cv((-7.106182, 1.591455, 0.399515), 1)),
			(cv((-7.086594, 0.407769, 0.399493), 1)),
			(cv((-7.106059, 0.407892, 0.399515), 1)),
			(cv((-7.086472, 1.591455, 0.399492), 1)),
			(cv((-7.106901, 0.407892, -0.384248), 1)),
			(cv((-7.363579, 0.244664, 0.005887), 1)),
			(cv((-7.096303, 0.428806, 0.383381), 1)),
			(cv((-7.363579, -0.003811, 0.005887), 1)),
			(cv((-7.107023, 1.591455, -0.384248), 1)),
			(cv((-7.345466, 0.244664, -0.019043), 1)),
			(cv((-7.345466, -0.003811, -0.019043), 1)),
			(cv((-7.316159, 0.244664, -0.009521), 1)),
			(cv((-7.316159, -0.003811, -0.009521), 1)),
			(cv((-7.316159, 0.244664, 0.021294), 1)),
			(cv((-7.316159, -0.003811, 0.021294), 1)),
			(cv((-7.345466, 0.244664, 0.030817), 1)),
			(cv((-7.345466, -0.003811, 0.030817), 1)),
			(cv((-7.09711, 0.428806, -0.368135), 1)),
			(cv((-7.087314, 1.591455, -0.384267), 1)),
			(cv((-7.087436, 0.407769, -0.384267), 1)),
			(cv((-7.096987, 1.591455, -0.368135), 1))	),
	texture_vertices = (
			st( 0.641544, 0.867467 ),
			st( 0.913170, 0.867467 ),
			st( 0.913170, 0.867467 ),
			st( 0.913170, 0.867467 ),
			st( 0.641776, 0.941407 ),
			st( 0.913402, 0.941407 ),
			st( 0.913402, 0.941407 ),
			st( 0.581717, 0.894473 ),
			st( 0.584166, 0.975809 ),
			st( 0.586314, 0.648318 ),
			st( 0.582193, 0.753760 ),
			st( 0.526942, 0.648318 ),
			st( 0.798569, 0.648318 ),
			st( 0.526785, 0.732141 ),
			st( 0.798411, 0.732141 ),
			st( 0.798411, 0.732141 ),
			st( 0.798411, 0.732141 ),
			st( 0.581717, 0.987407 ),
			st( 0.641544, 0.951658 ),
			st( 0.913170, 0.951658 ),
			st( 0.913170, 0.951658 ),
			st( 0.641494, 0.648318 ),
			st( 0.913120, 0.648318 ),
			st( 0.913120, 0.648318 ),
			st( 0.641742, 0.731500 ),
			st( 0.913369, 0.731500 ),
			st( 0.913369, 0.731500 ),
			st( 0.913369, 0.731500 ),
			st( 0.527218, 0.867279 ),
			st( 0.798844, 0.867279 ),
			st( 0.798844, 0.867279 ),
			st( 0.798844, 0.867279 ),
			st( 0.527218, 0.951564 ),
			st( 0.798844, 0.951564 ),
			st( 0.528080, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.076337, 0.987201 ),
			st( 0.135609, 0.987201 ),
			st( 0.135681, 0.006602 ),
			st( 0.380186, -0.053500 ),
			st( 0.380186, -0.053500 ),
			st( 0.380186, -0.053500 ),
			st( 0.135609, 0.006704 ),
			st( 0.378750, -0.053500 ),
			st( 0.378750, -0.053500 ),
			st( 0.378750, -0.053500 ),
			st( 0.135681, 0.987201 ),
			st( 0.135609, 0.006704 ),
			st( 0.378750, 1.051044 ),
			st( 0.378750, 1.051044 ),
			st( 0.378750, 1.051044 ),
			st( 0.712608, 0.652672 ),
			st( 0.076337, 0.024029 ),
			st( 0.255775, -0.026258 ),
			st( 0.255775, -0.026258 ),
			st( 0.255775, -0.026258 ),
			st( 0.712608, 0.184318 ),
			st( 0.135609, 0.987201 ),
			st( 0.900571, 0.652672 ),
			st( 0.900571, 0.184318 ),
			st( 0.828776, 0.652672 ),
			st( 0.828776, 0.184318 ),
			st( 0.596441, 0.652672 ),
			st( 0.596441, 0.184318 ),
			st( 0.524646, 0.652672 ),
			st( 0.524646, 0.184318 ),
			st( 0.076337, 0.024029 ),
			st( 0.255775, 1.023802 ),
			st( 0.255775, 1.023802 ),
			st( 0.255775, 1.023802 ),
			st( 0.135681, 0.987201 ),
			st( 0.135681, 0.006602 ),
			st( 0.380186, 1.051044 ),
			st( 0.380186, 1.051044 ),
			st( 0.380186, 1.051044 ),
			st( 0.076337, 0.987201 ) ),
	polygons = (
		polygon ((0, 1, 2),(0, 4, 7), 0 ),
		polygon ((2, 1, 3),(7, 4, 8), 0 ),
		polygon ((4, 5, 6),(9, 10, 11), 0 ),
		polygon ((6, 5, 7),(11, 10, 13), 0 ),
		polygon ((8, 1, 9),(17, 4, 18), 0 ),
		polygon ((3, 1, 8),(8, 4, 17), 0 ),
		polygon ((10, 11, 4),(21, 24, 9), 0 ),
		polygon ((4, 11, 5),(9, 24, 10), 0 ),
		polygon ((5, 2, 7),(10, 7, 13), 0 ),
		polygon ((7, 2, 12),(13, 7, 28), 0 ),
		polygon ((13, 3, 8),(32, 8, 17), 0 ),
		polygon ((14, 3, 13),(34, 8, 32), 0 ),
		polygon ((11, 0, 5),(24, 0, 10), 0 ),
		polygon ((5, 0, 2),(10, 0, 7), 0 ),
		polygon ((2, 3, 12),(7, 8, 28), 0 ),
		polygon ((12, 3, 14),(28, 8, 34), 0 ),
		polygon ((6, 7, 10),(12, 14, 22), 0 ),
		polygon ((10, 7, 11),(23, 15, 25), 0 ),
		polygon ((7, 12, 11),(16, 29, 26), 0 ),
		polygon ((11, 12, 0),(27, 30, 1), 0 ),
		polygon ((12, 14, 0),(31, 35, 2), 0 ),
		polygon ((0, 14, 1),(3, 36, 5), 0 ),
		polygon ((9, 14, 13),(19, 37, 33), 0 ),
		polygon ((1, 14, 9),(6, 38, 20), 0 ),
		polygon ((25, 26, 27),(61, 62, 63), 0 ),
		polygon ((27, 26, 28),(63, 62, 64), 0 ),
		polygon ((27, 28, 29),(63, 64, 65), 0 ),
		polygon ((29, 28, 30),(65, 64, 66), 0 ),
		polygon ((29, 30, 31),(65, 66, 67), 0 ),
		polygon ((31, 30, 32),(67, 66, 68), 0 ),
		polygon ((25, 29, 31),(61, 65, 67), 0 ),
		polygon ((27, 29, 25),(63, 65, 61), 0 ),
		polygon ((33, 34, 35),(69, 73, 74), 0 ),
		polygon ((36, 34, 33),(78, 73, 69), 0 ),
		polygon ((20, 36, 33),(50, 78, 69), 0 ),
		polygon ((24, 36, 20),(60, 78, 50), 0 ),
		polygon ((35, 24, 20),(74, 60, 50), 0 ),
		polygon ((34, 24, 35),(73, 60, 74), 0 ),
		polygon ((17, 19, 22),(41, 49, 55), 0 ),
		polygon ((22, 19, 15),(55, 49, 39), 0 ),
		polygon ((22, 15, 18),(55, 39, 45), 0 ),
		polygon ((18, 15, 16),(45, 39, 40), 0 ),
		polygon ((18, 16, 17),(45, 40, 41), 0 ),
		polygon ((17, 16, 19),(41, 40, 49), 0 ),
		polygon ((22, 35, 17),(56, 75, 42), 0 ),
		polygon ((33, 35, 22),(70, 76, 57), 0 ),
		polygon ((18, 33, 22),(46, 71, 58), 0 ),
		polygon ((20, 33, 18),(51, 72, 47), 0 ),
		polygon ((17, 20, 18),(43, 52, 48), 0 ),
		polygon ((35, 20, 17),(77, 53, 44), 0 ),
		polygon ((25, 23, 26),(61, 59, 62), 0 ),
		polygon ((31, 32, 21),(67, 68, 54), 0 ),
		polygon ((21, 32, 23),(54, 68, 59), 0 ),
		polygon ((25, 31, 21),(61, 67, 54), 0 ),
		polygon ((21, 23, 25),(54, 59, 61), 0 )
	)
); /* end of polyset 'goalpost_obj' */

polyset goalpost2_obj (
	active = ON,
	motion_blur = OFF,
	smooth = ON,
	doublesided = OFF,
	opposite = OFF,
	shader = (post ),
	casts_shadow = TRUE,
	vertices = ((cv((7.253229, 0.356949, -0.005349), 1)),
			(cv((7.180104, 0.400378, -0.005393), 1)),
			(cv((7.268457, 0.372811, 0.005967), 1)),
			(cv((7.187945, 0.420585, 0.005504), 1)),
			(cv((7.328372, 0.228228, 0.005097), 1)),
			(cv((7.321368, 0.290161, 0.005877), 1)),
			(cv((7.306707, 0.228228, 0.016327), 1)),
			(cv((7.301791, 0.277463, 0.016357), 1)),
			(cv((7.079902, 0.427397, 0.005967), 1)),
			(cv((7.079954, 0.4064, -0.005349), 1)),
			(cv((7.307814, 0.228228, -0.005339), 1)),
			(cv((7.302098, 0.277087, -0.005386), 1)),
			(cv((7.25344, 0.356838, 0.016275), 1)),
			(cv((7.079723, 0.406344, 0.016275), 1)),
			(cv((7.180098, 0.400537, 0.016112), 1)),
			(cv((7.074913, 1.591455, 0.383381), 1)),
			(cv((7.084915, 1.591455, 0.399515), 1)),
			(cv((7.065328, 0.407769, 0.399493), 1)),
			(cv((7.084792, 0.407892, 0.399515), 1)),
			(cv((7.065205, 1.591455, 0.399492), 1)),
			(cv((7.085634, 0.407892, -0.384248), 1)),
			(cv((7.342312, 0.244664, 0.005887), 1)),
			(cv((7.075036, 0.428806, 0.383381), 1)),
			(cv((7.342312, -0.003811, 0.005887), 1)),
			(cv((7.085757, 1.591455, -0.384248), 1)),
			(cv((7.324199, 0.244664, -0.019043), 1)),
			(cv((7.324199, -0.003811, -0.019043), 1)),
			(cv((7.294892, 0.244664, -0.009521), 1)),
			(cv((7.294892, -0.003811, -0.009521), 1)),
			(cv((7.294892, 0.244664, 0.021294), 1)),
			(cv((7.294892, -0.003811, 0.021294), 1)),
			(cv((7.324199, 0.244664, 0.030817), 1)),
			(cv((7.324199, -0.003811, 0.030817), 1)),
			(cv((7.075843, 0.428806, -0.368135), 1)),
			(cv((7.066047, 1.591455, -0.384267), 1)),
			(cv((7.066169, 0.407769, -0.384267), 1)),
			(cv((7.07572, 1.591455, -0.368135), 1))	),
	texture_vertices = (
			st( 0.641544, 0.867467 ),
			st( 0.913170, 0.867467 ),
			st( 0.913170, 0.867467 ),
			st( 0.913170, 0.867467 ),
			st( 0.641776, 0.941407 ),
			st( 0.913402, 0.941407 ),
			st( 0.913402, 0.941407 ),
			st( 0.581717, 0.894473 ),
			st( 0.584166, 0.975809 ),
			st( 0.586314, 0.648318 ),
			st( 0.582193, 0.753760 ),
			st( 0.526942, 0.648318 ),
			st( 0.798569, 0.648318 ),
			st( 0.526785, 0.732141 ),
			st( 0.798411, 0.732141 ),
			st( 0.798411, 0.732141 ),
			st( 0.798411, 0.732141 ),
			st( 0.581717, 0.987407 ),
			st( 0.641544, 0.951658 ),
			st( 0.913170, 0.951658 ),
			st( 0.913170, 0.951658 ),
			st( 0.641494, 0.648318 ),
			st( 0.913120, 0.648318 ),
			st( 0.913120, 0.648318 ),
			st( 0.641742, 0.731500 ),
			st( 0.913369, 0.731500 ),
			st( 0.913369, 0.731500 ),
			st( 0.913369, 0.731500 ),
			st( 0.527218, 0.867279 ),
			st( 0.798844, 0.867279 ),
			st( 0.798844, 0.867279 ),
			st( 0.798844, 0.867279 ),
			st( 0.527218, 0.951564 ),
			st( 0.798844, 0.951564 ),
			st( 0.528080, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.799706, 0.941677 ),
			st( 0.076337, 0.987201 ),
			st( 0.135609, 0.987201 ),
			st( 0.135681, 0.006602 ),
			st( 0.380186, -0.053500 ),
			st( 0.380186, -0.053500 ),
			st( 0.380186, -0.053500 ),
			st( 0.135609, 0.006704 ),
			st( 0.378750, -0.053500 ),
			st( 0.378750, -0.053500 ),
			st( 0.378750, -0.053500 ),
			st( 0.135681, 0.987201 ),
			st( 0.135609, 0.006704 ),
			st( 0.378750, 1.051044 ),
			st( 0.378750, 1.051044 ),
			st( 0.378750, 1.051044 ),
			st( 0.712608, 0.652672 ),
			st( 0.076337, 0.024029 ),
			st( 0.255775, -0.026258 ),
			st( 0.255775, -0.026258 ),
			st( 0.255775, -0.026258 ),
			st( 0.712608, 0.184318 ),
			st( 0.135609, 0.987201 ),
			st( 0.900571, 0.652672 ),
			st( 0.900571, 0.184318 ),
			st( 0.828776, 0.652672 ),
			st( 0.828776, 0.184318 ),
			st( 0.596441, 0.652672 ),
			st( 0.596441, 0.184318 ),
			st( 0.524646, 0.652672 ),
			st( 0.524646, 0.184318 ),
			st( 0.076337, 0.024029 ),
			st( 0.255775, 1.023802 ),
			st( 0.255775, 1.023802 ),
			st( 0.255775, 1.023802 ),
			st( 0.135681, 0.987201 ),
			st( 0.135681, 0.006602 ),
			st( 0.380186, 1.051044 ),
			st( 0.380186, 1.051044 ),
			st( 0.380186, 1.051044 ),
			st( 0.076337, 0.987201 ) ),
	polygons = (
		polygon ((2, 1, 0),(7, 4, 0), 0 ),
		polygon ((3, 1, 2),(8, 4, 7), 0 ),
		polygon ((6, 5, 4),(11, 10, 9), 0 ),
		polygon ((7, 5, 6),(13, 10, 11), 0 ),
		polygon ((9, 1, 8),(18, 4, 17), 0 ),
		polygon ((8, 1, 3),(17, 4, 8), 0 ),
		polygon ((4, 11, 10),(9, 24, 21), 0 ),
		polygon ((5, 11, 4),(10, 24, 9), 0 ),
		polygon ((7, 2, 5),(13, 7, 10), 0 ),
		polygon ((12, 2, 7),(28, 7, 13), 0 ),
		polygon ((8, 3, 13),(17, 8, 32), 0 ),
		polygon ((13, 3, 14),(32, 8, 34), 0 ),
		polygon ((5, 0, 11),(10, 0, 24), 0 ),
		polygon ((2, 0, 5),(7, 0, 10), 0 ),
		polygon ((12, 3, 2),(28, 8, 7), 0 ),
		polygon ((14, 3, 12),(34, 8, 28), 0 ),
		polygon ((10, 7, 6),(22, 14, 12), 0 ),
		polygon ((11, 7, 10),(25, 15, 23), 0 ),
		polygon ((11, 12, 7),(26, 29, 16), 0 ),
		polygon ((0, 12, 11),(1, 30, 27), 0 ),
		polygon ((0, 14, 12),(2, 35, 31), 0 ),
		polygon ((1, 14, 0),(5, 36, 3), 0 ),
		polygon ((13, 14, 9),(33, 37, 19), 0 ),
		polygon ((9, 14, 1),(20, 38, 6), 0 ),
		polygon ((27, 26, 25),(63, 62, 61), 0 ),
		polygon ((28, 26, 27),(64, 62, 63), 0 ),
		polygon ((29, 28, 27),(65, 64, 63), 0 ),
		polygon ((30, 28, 29),(66, 64, 65), 0 ),
		polygon ((31, 30, 29),(67, 66, 65), 0 ),
		polygon ((32, 30, 31),(68, 66, 67), 0 ),
		polygon ((31, 29, 25),(67, 65, 61), 0 ),
		polygon ((25, 29, 27),(61, 65, 63), 0 ),
		polygon ((35, 34, 33),(74, 73, 69), 0 ),
		polygon ((33, 34, 36),(69, 73, 78), 0 ),
		polygon ((33, 36, 20),(69, 78, 50), 0 ),
		polygon ((20, 36, 24),(50, 78, 60), 0 ),
		polygon ((20, 24, 35),(50, 60, 74), 0 ),
		polygon ((35, 24, 34),(74, 60, 73), 0 ),
		polygon ((22, 19, 17),(55, 49, 41), 0 ),
		polygon ((15, 19, 22),(39, 49, 55), 0 ),
		polygon ((18, 15, 22),(45, 39, 55), 0 ),
		polygon ((16, 15, 18),(40, 39, 45), 0 ),
		polygon ((17, 16, 18),(41, 40, 45), 0 ),
		polygon ((19, 16, 17),(49, 40, 41), 0 ),
		polygon ((17, 35, 22),(42, 75, 56), 0 ),
		polygon ((22, 35, 33),(57, 76, 70), 0 ),
		polygon ((22, 33, 18),(58, 71, 46), 0 ),
		polygon ((18, 33, 20),(47, 72, 51), 0 ),
		polygon ((18, 20, 17),(48, 52, 43), 0 ),
		polygon ((17, 20, 35),(44, 53, 77), 0 ),
		polygon ((26, 23, 25),(62, 59, 61), 0 ),
		polygon ((21, 32, 31),(54, 68, 67), 0 ),
		polygon ((23, 32, 21),(59, 68, 54), 0 ),
		polygon ((21, 31, 25),(54, 67, 61), 0 ),
		polygon ((25, 23, 21),(61, 59, 54), 0 )
	)
); /* end of polyset 'goalpost2_obj' */

ENVIRONMENT
background ( 
        color = (0.0, 0.0, 0.0)
);
shader_glow ( 
,
        glow_type =  LINEAR_GLOW,
        halo_type =  LINEAR_GLOW,
        auto_exposure = ON,
        quality = 0.5,
        threshold = 0.0,
        glow_color = (100.0, 100.0, 100.0),
        glow_intensity = 1.0,
        glow_spread = 0.05,
        glow_eccentricity = 0.1,
        glow_radial_noise = 0.0,
        glow_star_level = 0.0,
        glow_opacity = 0.0,
        halo_color = (100.0, 100.0, 100.0),
        halo_intensity = 1.0,
        halo_spread = 0.3,
        halo_eccentricity = 0.1,
        halo_radial_noise = 0.0,
        halo_star_level = 0.0,
        halo_lens_flare = 0.0,
        rotation = 0.0,
        radial_noise_frequency = 0.5,
        star_points = 4.0
);
photo_effects ( 
,
        film_grain = 0.0,
        filter = (255.0, 255.0, 255.0)
);
master_light ( 
,
        intensity = 1.0,
        light_color = (255.0, 255.0, 255.0)
);
dynamics ( 
,
        gravity = 1.0,
        air_density = 0.05,
        Floor = ON,
        floor_offset = 0.0,
        ceiling = OFF,
        ceiling_offset = 20.0,
        left = OFF,
        left_offset = -10.0,
        right = OFF,
        right_offset = 10.0,
        front = OFF,
        front_offset = -10.0,
        back = OFF,
        back_offset = 10.0,
        wall_friction = 0.0,
        wall_elasticity = 0.707,
        turbulence_intensity = 0.0,
        turbulence_spread = 0.5,
        turbulence_persistence = 5.0,
        turbulence_animated = ON,
        turbulence_space_resolution =  16,
        turbulence_time_resolution =  16,
        turbulence_roughness = 0.5,
        turbulence_variability = 0.5,
        turbulence_granularity = 0.0
);

MODEL
/* Only expression assignments should appear above this line and below the MODEL directive. */
/* Placing any other commands in the above section will produce incorrect expression behaviour. */
{
	trn(0.0, 0.0, 12.0);
	{
		inst Light();
	}
	{
		trn(-2.0, -2.0, 0.0);
		Lightview = current_position(( 0.0,  0.0,  0.0));
	}
	{
		trn(0.0, 10.0, 0.0);
		Lightup = current_position(( 0.0,  0.0,  0.0));
	}
}
{
	instance shadows_obj();
}
{
	instance outerfield_obj();
}
{
	instance mainfield_obj();
}
{
	instance nfllogo_obj();
}
{
	instance ezstripe_obj();
}
{
	instance ezlogo_obj();
}
{
	instance yardmarkers_obj();
}
{
	instance fieldnumbers_obj();
}
{
	instance pylons_obj();
}
{
	instance goalpost_obj();
}
{
	instance goalpost2_obj();
}
{
	{
		trn(-32.37986, 9.960109, 0.697843);
		camera (
			perspective = TRUE,
			eye   = ( 0.0,  0.0,  0.0),
			active = ON,
			pix   = "pix/field.sdl",
			view  = Camera_view,
			up  = Camera_up,
			aov = 55.0,
			filmaperture_x = 0.4,
			filmaperture_y = 0.285,
			filmoffset_x = 0.0,
			filmoffset_y = 0.0,
			placement_fit_code = 0,
			placement_shift = 0.0,
			aspect   = pixel_aspect,
			aspect_ratio_pixel = pixel_aspect,
			near = 0.1,
			far = 200.0,
			depth_of_field = 0.0,
			scaling_factor = 1.0,
			f_stop = 3.5,
			focal_distance = 12.0,
			auto_focus = OFF,
			motion_blur = 0.0
		);
	}
	{
		trn(-20.821922, 6.733068, 0.67767);
		Camera_view = current_position( (0, 0, 0) );
	}
	{
		trn(-32.110939, 10.92327, 0.697375);
		Camera_up = current_position( (0, 0, 0) );
	}
}

